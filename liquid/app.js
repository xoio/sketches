!function(t){var e={};function i(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(r,n,function(e){return t[e]}.bind(null,n));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=23)}([function(t,e){t.exports="precision highp float;\n\nin vec2 a_position;\n\nout vec2 v_coordinates;\n\nvoid main () {\n    v_coordinates = a_position * 0.5 + 0.5;\n\n    gl_Position = vec4(a_position, 0.0, 1.0);\n}\n"},function(t,e){t.exports="precision highp float;\n\nvec3 get3DFragCoord (vec3 resolution) {\n    return vec3(\n        mod(gl_FragCoord.x, resolution.x),\n        gl_FragCoord.y,\n        floor(gl_FragCoord.x / resolution.x) + 0.5);\n}\n\nvec4 texture3D(sampler2D _texture, vec3 coordinates, vec3 resolution) {\n    vec3 fullCoordinates = coordinates * resolution; //in [(0, 0, 0), (resolution.x, resolution.y, resolutionz)] \n\n    fullCoordinates = clamp(fullCoordinates, vec3(0.5), vec3(resolution - 0.5));\n\n    //belowZIndex and aboveZIndex don't have the 0.5 offset\n    float belowZIndex = floor(fullCoordinates.z - 0.5);\n    float aboveZIndex = belowZIndex + 1.0; \n\n    //we interpolate the z\n    float fraction = fract(fullCoordinates.z - 0.5);\n\n    vec2 belowCoordinates = vec2(\n        belowZIndex * resolution.x + fullCoordinates.x,\n        fullCoordinates.y) / vec2(resolution.x * resolution.z, resolution.y);\n\n    vec2 aboveCoordinates = vec2(\n        aboveZIndex * resolution.x + fullCoordinates.x,\n        fullCoordinates.y) / vec2(resolution.x * resolution.z, resolution.y);\n\n    return mix(texture(_texture, belowCoordinates), texture(_texture, aboveCoordinates), fraction);\n}\n\nvec4 texture3DNearest(sampler2D _texture, vec3 coordinates, vec3 resolution) { //clamps the z coordinate\n    vec3 fullCoordinates = coordinates * resolution; //in [(0, 0, 0), (resolution.x, resolution.y, resolutionz)] \n\n    fullCoordinates = clamp(fullCoordinates, vec3(0.5), vec3(resolution - 0.5));\n\n    float zIndex = floor(fullCoordinates.z);\n\n    vec2 textureCoordinates = vec2(\n        zIndex * resolution.x + fullCoordinates.x,\n        fullCoordinates.y) / vec2(resolution.x * resolution.z, resolution.y);\n\n    return texture(_texture, textureCoordinates);\n}\n\n/*\nvec4 texture3D(sampler2D tex, vec3 texCoord, vec3 resolution) {\n    float size = resolution.z;\n   float sliceSize = 1.0 / size;                         // space of 1 slice\n   float slicePixelSize = sliceSize / size;              // space of 1 pixel\n   float sliceInnerSize = slicePixelSize * (size - 1.0); // space of size pixels\n   float zSlice0 = min(floor(texCoord.z * size), size - 1.0);\n   float zSlice1 = min(zSlice0 + 1.0, size - 1.0);\n   float xOffset = slicePixelSize * 0.5 + texCoord.x * sliceInnerSize;\n   float s0 = xOffset + (zSlice0 * sliceSize);\n   float s1 = xOffset + (zSlice1 * sliceSize);\n   vec4 slice0Color = texture(tex, vec2(s0, texCoord.y));\n   vec4 slice1Color = texture(tex, vec2(s1, texCoord.y));\n   float zOffset = mod(texCoord.z * size, 1.0);\n   return mix(slice0Color, slice1Color, zOffset);\n}\n*/\n\n"},function(t,e){t.exports="in vec2 position;\n out vec2 vUv;\n out vec2 vPosition;\n const vec2 scale = vec2(0.5,0.5);\n\n\n\n void main(){\n     vPosition = position;\n     vUv = position.xy * scale + scale;\n     gl_Position = vec4(position,0.0,1.0);\n }"},function(t,e){t.exports="precision highp float;\n\nin vec2 v_coordinates;\n\nuniform vec3 u_gridResolution;\n\nuniform sampler2D u_pressureTexture;\nuniform sampler2D u_velocityTexture;\nuniform sampler2D u_markerTexture;\n\nout vec4 glFragColor;\n\nvoid main () {\n    vec3 cellIndex = floor(get3DFragCoord(u_gridResolution + 1.0));\n\n    float left = texture3DNearest(u_pressureTexture, (cellIndex + vec3(-1.0, 0.0, 0.0) + 0.5) / u_gridResolution, u_gridResolution).r;\n    float right = texture3DNearest(u_pressureTexture, (cellIndex + 0.5) / u_gridResolution, u_gridResolution).r;\n\n    float bottom = texture3DNearest(u_pressureTexture, (cellIndex + vec3(0.0, -1.0, 0.0) + 0.5) / u_gridResolution, u_gridResolution).r;\n    float top = texture3DNearest(u_pressureTexture, (cellIndex + 0.5) / u_gridResolution, u_gridResolution).r;\n\n    float back = texture3DNearest(u_pressureTexture, (cellIndex + vec3(0.0, 0.0, -1.0) + 0.5) / u_gridResolution, u_gridResolution).r;\n    float front = texture3DNearest(u_pressureTexture, (cellIndex + 0.5) / u_gridResolution, u_gridResolution).r;\n\n\n    //compute gradient of pressure\n    vec3 gradient = vec3(right - left, top - bottom, front - back) / 1.0;\n\n    vec3 currentVelocity = texture(u_velocityTexture, v_coordinates).rgb;\n\n    vec3 newVelocity = currentVelocity - gradient;\n\n    glFragColor = vec4(newVelocity, 0.0);\n}\n"},function(t,e){t.exports="precision highp float;\n\nuniform sampler2D u_texture;\n\nin vec2 v_coordinates;\n\nout vec4 glFragColor;\n\nvoid main () {\n    glFragColor = texture(u_texture, v_coordinates);\n}\n"},function(t,e){t.exports="//advects particle positions with second order runge kutta\n\nin vec2 v_coordinates;\n\nuniform sampler2D u_positionsTexture;\nuniform sampler2D u_randomsTexture;\n\nuniform sampler2D u_velocityGrid;\n\nuniform vec3 u_gridResolution;\nuniform vec3 u_gridSize;\n\nuniform float u_timeStep;\n\nuniform float u_frameNumber;\n\nuniform vec2 u_particlesResolution;\n\nout vec4 glFragColor;\n\nfloat sampleXVelocity (vec3 position) {\n    vec3 cellIndex = vec3(position.x, position.y - 0.5, position.z - 0.5);\n    return texture3D(u_velocityGrid, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).x;\n}\n\nfloat sampleYVelocity (vec3 position) {\n    vec3 cellIndex = vec3(position.x - 0.5, position.y, position.z - 0.5);\n    return texture3D(u_velocityGrid, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).y;\n}\n\nfloat sampleZVelocity (vec3 position) {\n    vec3 cellIndex = vec3(position.x - 0.5, position.y - 0.5, position.z);\n    return texture3D(u_velocityGrid, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).z;\n}\n\nvec3 sampleVelocity (vec3 position) {\n    vec3 gridPosition = (position / u_gridSize) * u_gridResolution;\n    return vec3(sampleXVelocity(gridPosition), sampleYVelocity(gridPosition), sampleZVelocity(gridPosition));\n}\n\nvoid main () {\n    vec3 position = texture(u_positionsTexture, v_coordinates).rgb;\n    vec3 randomDirection = texture(u_randomsTexture, fract(v_coordinates + u_frameNumber / u_particlesResolution)).rgb;\n\n    vec3 velocity = sampleVelocity(position);\n\n    vec3 halfwayPosition = position + velocity * u_timeStep * 0.5;\n    vec3 halfwayVelocity = sampleVelocity(halfwayPosition);\n\n    vec3 step = halfwayVelocity * u_timeStep;\n\n    step += 0.05 * randomDirection * length(velocity) * u_timeStep;\n\n    step = clamp(step, -vec3(1.0), vec3(1.0)); //enforce CFL condition\n\n    vec3 newPosition = position + step;\n\n\n    newPosition = clamp(newPosition, vec3(0.01), u_gridSize - 0.01);\n\n    glFragColor = vec4(newPosition, 0.0);\n}\n"},function(t,e){t.exports="precision highp float;\n\nin vec2 v_coordinates;\n\nuniform vec3 u_gridResolution;\n\nuniform sampler2D u_pressureTexture;\nuniform sampler2D u_divergenceTexture;\nuniform sampler2D u_markerTexture;\n\nout vec4 glFragColor;\n\nvoid main () {\n    vec3 centerCoords = get3DFragCoord(u_gridResolution) / u_gridResolution;\n\n    //pressure = 0 in air cells\n    float fluidCell = texture3DNearest(u_markerTexture, centerCoords, u_gridResolution).x;\n    if (fluidCell == 0.0) discard; //if this is an air cell\n\n    vec3 delta = 1.0 / u_gridResolution;\n\n    float divergenceCenter = texture3DNearest(u_divergenceTexture, centerCoords, u_gridResolution).r;\n\n    float left = texture3DNearest(u_pressureTexture, centerCoords + vec3(-delta.x, 0.0, 0.0), u_gridResolution).r;\n    float right = texture3DNearest(u_pressureTexture, centerCoords + vec3(delta.x, 0.0, 0.0), u_gridResolution).r;\n    float bottom = texture3DNearest(u_pressureTexture, centerCoords + vec3(0.0, -delta.y, 0.0), u_gridResolution).r;\n    float top = texture3DNearest(u_pressureTexture, centerCoords + vec3(0.0, delta.y, 0.0), u_gridResolution).r;\n    float back = texture3DNearest(u_pressureTexture, centerCoords + vec3(0.0, 0.0, -delta.z), u_gridResolution).r;\n    float front = texture3DNearest(u_pressureTexture, centerCoords + vec3(0.0, 0.0, delta.z), u_gridResolution).r;\n\n    //float newPressure = (left + right + bottom + top + back + front - divergenceCenter) / 6.0;\n    float newPressure = (left + right + bottom + top + back + front - divergenceCenter) / 7.0;\n\n\n\n    glFragColor = vec4(newPressure, 0.0, 0.0, 0.0);\n\n}\n"},function(t,e){t.exports="precision highp float;\n\nin vec2 v_coordinates;\n\nuniform sampler2D u_velocityTexture;\nuniform sampler2D u_markerTexture;\nuniform sampler2D u_weightTexture;\n\nuniform vec3 u_gridResolution;\n\nuniform float u_maxDensity;\n\nout vec4 glFragColor;\n\nvoid main () {\n    vec3 cellIndex = floor(get3DFragCoord(u_gridResolution));\n\n    //divergence = 0 in air cells\n    float fluidCell = texture3DNearest(u_markerTexture, (cellIndex + 0.5) / u_gridResolution, u_gridResolution).x;\n    if (fluidCell == 0.0) discard;\n\n\n    float leftX = texture3DNearest(u_velocityTexture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).x;\n    float rightX = texture3DNearest(u_velocityTexture, (cellIndex + vec3(1.0, 0.0, 0.0) + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).x;\n\n    float bottomY = texture3DNearest(u_velocityTexture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).y;\n    float topY = texture3DNearest(u_velocityTexture, (cellIndex + vec3(0.0, 1.0, 0.0) + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).y;\n\n    float backZ = texture3DNearest(u_velocityTexture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).z;\n    float frontZ = texture3DNearest(u_velocityTexture, (cellIndex + vec3(0.0, 0.0, 1.0) + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).z;\n\n    float divergence = ((rightX - leftX) + (topY - bottomY) + (frontZ - backZ)) / 1.0;\n\n    float density = texture3DNearest(u_weightTexture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).a;\n    divergence -= max((density - u_maxDensity) * 1.0, 0.0); //volume conservation\n\n    glFragColor = vec4(divergence, 0.0, 0.0, 0.0);\n}\n"},function(t,e){t.exports="//transfers velocities back to the particles \n\nin vec2 v_coordinates;\n\nuniform sampler2D u_particlePositionTexture;\nuniform sampler2D u_particleVelocityTexture;\n\nuniform sampler2D u_gridVelocityTexture;\nuniform sampler2D u_originalGridVelocityTexture; //the grid velocities before the update\n\nuniform vec3 u_gridResolution;\nuniform vec3 u_gridSize;\n\nuniform float u_flipness; //0 is full PIC, 1 is full FLIP\n\nout vec4 glFragColor;\nfloat sampleXVelocity (sampler2D texture, vec3 position) {\n    vec3 cellIndex = vec3(position.x, position.y - 0.5, position.z - 0.5);\n    return texture3D(texture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).x;\n}\n\nfloat sampleYVelocity (sampler2D texture, vec3 position) {\n    vec3 cellIndex = vec3(position.x - 0.5, position.y, position.z - 0.5);\n    return texture3D(texture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).y;\n}\n\nfloat sampleZVelocity (sampler2D texture, vec3 position) {\n    vec3 cellIndex = vec3(position.x - 0.5, position.y - 0.5, position.z);\n    return texture3D(texture, (cellIndex + 0.5) / (u_gridResolution + 1.0), u_gridResolution + 1.0).z;\n}\n\nvec3 sampleVelocity (sampler2D texture, vec3 position) {\n    return vec3(sampleXVelocity(texture, position), sampleYVelocity(texture, position), sampleZVelocity(texture, position));\n}\n\nvoid main () {\n    vec3 particlePosition = texture(u_particlePositionTexture, v_coordinates).rgb;\n    particlePosition = (particlePosition / u_gridSize) * u_gridResolution;\n\n    vec3 particleVelocity = texture(u_particleVelocityTexture, v_coordinates).rgb;\n\n    vec3 currentVelocity = sampleVelocity(u_gridVelocityTexture, particlePosition);\n    vec3 originalVelocity = sampleVelocity(u_originalGridVelocityTexture, particlePosition);\n\n    vec3 velocityChange = currentVelocity - originalVelocity;\n\n    vec3 flipVelocity = particleVelocity + velocityChange;\n    vec3 picVelocity = currentVelocity;\n\n\n    vec4 finalPos =  vec4(mix(picVelocity, flipVelocity, u_flipness),  0.0);\n\n    glFragColor = finalPos;\n}\n"},function(t,e){t.exports="//sets the velocities at the boundary cells\n\nprecision highp float;\n\nin vec2 v_coordinates;\n\nuniform sampler2D u_velocityTexture;\n\nuniform vec3 u_gridResolution;\n\nout vec4 glFragColor;\n\nvoid main () {\n    vec3 velocity = texture(u_velocityTexture, v_coordinates).rgb;\n    vec3 cellIndex = floor(get3DFragCoord(u_gridResolution + 1.0));\n\n    if (cellIndex.x < 0.5) {\n        velocity.x = 0.0;\n    }\n\n    if (cellIndex.x > u_gridResolution.x - 0.5) {\n        velocity.x = 0.0;\n    }\n\n    if (cellIndex.y < 0.5) {\n        velocity.y = 0.0;\n    }\n\n    if (cellIndex.y > u_gridResolution.y - 0.5) {\n        velocity.y = min(velocity.y, 0.0);\n    }\n\n\n    if (cellIndex.z < 0.5) {\n        velocity.z = 0.0;\n    }\n\n    if (cellIndex.z > u_gridResolution.z - 0.5) {\n        velocity.z = 0.0;\n    }\n\n    glFragColor = vec4(velocity, 0.0);\n}\n"},function(t,e){t.exports="precision highp float;\n\nin vec2 v_coordinates;\n\nuniform sampler2D particlePositions;\nuniform sampler2D u_velocityTexture;\n\nuniform vec3 u_mouseVelocity;\n\nuniform vec3 u_gridResolution;\nuniform vec3 u_gridSize;\n\nuniform vec3 u_mouseRayOrigin;\nuniform vec3 u_mouseRayDirection;\n\nuniform float u_timeStep;\n\nout vec4 glFragColor;\n\nfloat kernel (vec3 position, float radius) {\n    vec3 worldPosition = (position / u_gridResolution) * u_gridSize;\n\n    float distanceToMouseRay = length(cross(u_mouseRayDirection, worldPosition - u_mouseRayOrigin));\n\n    float normalizedDistance = max(0.0, distanceToMouseRay / radius);\n    return smoothstep(1.0, 0.9, normalizedDistance);\n}\n\nvoid main () {\n    vec3 velocity = texture(u_velocityTexture, v_coordinates).rgb;\n    vec4 pPositions = texture(particlePositions,v_coordinates);\n\n    vec3 newVelocity = velocity + vec3(0.0, -40.0 * u_timeStep, 0.0); //add gravity\n\n    vec3 cellIndex = floor(get3DFragCoord(u_gridResolution + 1.0));\n    vec3 xPosition = vec3(cellIndex.x, cellIndex.y + 0.5, cellIndex.z + 0.5);\n    vec3 yPosition = vec3(cellIndex.x, cellIndex.y, cellIndex.z + 0.5);\n    vec3 zPosition = vec3(cellIndex.x + 0.5, cellIndex.y + 0.5, cellIndex.z);\n\n    float mouseRadius =1005.0;\n    //vec3 kernelValues = vec3(kernel(xPosition, mouseRadius), kernel(yPosition, mouseRadius), kernel(zPosition, mouseRadius));\n    vec3 kernelValues = vec3(kernel(xPosition, mouseRadius), kernel(yPosition, mouseRadius), kernel(zPosition, mouseRadius));\n\n    vec3 mVel = u_mouseVelocity;\n    newVelocity += mVel * kernelValues * 3.0 * smoothstep(0.0, 1.0 / 200.0, u_timeStep);\n    //newVelocity.y /= smoothstep(0.0, 1.0 / 200.0, u_timeStep);\n\n\n    glFragColor = vec4(newVelocity * 1.0, 0.0);\n    //gl_FragColor = vec4(newVelocity.xy,1.0, 0.0);\n}\n"},function(t,e){t.exports="precision highp float;\nin vec3 vColor;\nout vec4 glFragColor;\nvoid main () {\n    glFragColor = vec4(0.5);\n    //glFragColor = vec4(vColor,1.0);\n}\n"},function(t,e){t.exports="//marks pixels with 1.0 if there's a particle there\n\nprecision highp float;\n\nin vec2 a_textureCoordinates;\n\nuniform sampler2D u_positionTexture;\n\nuniform vec3 u_gridResolution;\nuniform vec3 u_gridSize;\n\nout vec3 vColor;\n\n\nvoid main () {\n    gl_PointSize = 1.0;\n\n    vec3 position = texture(u_positionTexture, a_textureCoordinates).rgb;\n    position = (position / u_gridSize) * u_gridResolution;\n    vec3 cellIndex = floor(position);\n\n    vec2 textureCoordinates = vec2(\n        cellIndex.z * u_gridResolution.x + cellIndex.x + 0.5,\n        cellIndex.y + 0.5) / vec2(u_gridResolution.x * u_gridResolution.z, u_gridResolution.y);\n\n    vColor = cellIndex;\n    gl_Position = vec4(textureCoordinates * 2.0 - 1.0, 0.0, 1.0);\n}\n"},function(t,e){t.exports="//this does the divide in the weighted sum\n\nprecision highp float;\n\nin vec2 v_coordinates;\n\nuniform sampler2D u_accumulatedVelocityTexture;\nuniform sampler2D u_weightTexture;\n\nout vec4 glFragColor;\nvoid main () {\n    vec3 accumulatedVelocity = texture(u_accumulatedVelocityTexture, v_coordinates).rgb;\n    vec3 weight = texture(u_weightTexture, v_coordinates).rgb;\n\n    float xVelocity = 0.0;\n    if (weight.x > 0.0) {\n        xVelocity = accumulatedVelocity.x / weight.x;\n    }\n\n    float yVelocity = 0.0;\n    if (weight.y > 0.0) {\n        yVelocity = accumulatedVelocity.y / weight.y;\n    }\n\n    float zVelocity = 0.0;\n    if (weight.z > 0.0) {\n        zVelocity = accumulatedVelocity.z / weight.z;\n    }\n\n    glFragColor = vec4(xVelocity, yVelocity, zVelocity, 0.0);\n}\n"},function(t,e){t.exports="//two modes:\n//in one we accumulate (xWeight, yWeight, zWeight, centerWeight)\n//in the other we accumulate (xWeight * velocity.x, yWeight * velocity.y, zWeight * velocity.z, 0)\n\n//needs a division as a second step\n\nin vec3 v_position; //already in the grid coordinate system\nin vec3 v_velocity;\n\nuniform vec3 u_gridResolution;\n\nin float v_zIndex;\n\nuniform int u_accumulate; //when this is 0, we accumulate (xWeight, yWeight, 0, centerWeight), when 1 we accumulate (xWeight * velocity.x, yWeight * velocity.y, 0, 0)\n\nout vec4 glFragColor;\nfloat h (float r) {\n    if (r >= 0.0 && r <= 1.0) {\n        return 1.0 - r;\n    } else if (r >= -1.0 && r <= 0.0) {\n        return 1.0 + r;\n    } else {\n        return 0.0;\n    }\n}\n\nfloat k (vec3 v) {\n    return h(v.x) * h(v.y) * h(v.z);\n}\n\nvoid main () {\n    vec3 cellIndex = floor(get3DFragCoord(u_gridResolution + 1.0));\n\n    if (cellIndex.z == v_zIndex) { //make sure we're in the right slice to prevent bleeding\n        //staggered grid position and therefor weight is different for x, y, z and scalar values\n        vec3 xPosition = vec3(cellIndex.x, cellIndex.y + 0.5, cellIndex.z + 0.5);\n        float xWeight = k(v_position - xPosition);\n\n        vec3 yPosition = vec3(cellIndex.x + 0.5, cellIndex.y, cellIndex.z + 0.5);\n        float yWeight = k(v_position - yPosition);\n\n        vec3 zPosition = vec3(cellIndex.x + 0.5, cellIndex.y + 0.5, cellIndex.z);\n        float zWeight = k(v_position - zPosition);\n\n        vec3 scalarPosition = vec3(cellIndex.x + 0.5, cellIndex.y + 0.5, cellIndex.z + 0.5);\n        float scalarWeight = k(v_position - scalarPosition);\n\n        if (u_accumulate == 0) {\n            glFragColor = vec4(xWeight, yWeight, zWeight, scalarWeight);\n        } else if (u_accumulate == 1) {\n            glFragColor = vec4(xWeight * v_velocity.x, yWeight * v_velocity.y, zWeight * v_velocity.z, 0.0);\n        }\n\n    } else {\n        glFragColor = vec4(1.0, 0.0, 0.0, 1.0);\n        //gl_FragColor = vec4(0.0);\n    }\n}\n"},function(t,e){t.exports="//transfers particle velocities to the grid by splatting them using additive blending\n\nprecision highp float;\n\nin vec2 a_textureCoordinates;\n\nuniform sampler2D u_positionTexture;\nuniform sampler2D u_velocityTexture;\n\nuniform vec3 u_gridSize;\nuniform vec3 u_gridResolution;\n\nout vec3 v_position;\nout vec3 v_velocity;\n\nuniform float u_zOffset; //the offset for the z layer we're splatting into\nout float v_zIndex; //the z layer we're splatting into\n\nvoid main () {\n    gl_PointSize = 5.0; //TODO: i can probably compute this more accurately\n\n    vec3 position = texture(u_positionTexture, a_textureCoordinates).rgb;\n    position = (position / u_gridSize) * u_gridResolution;\n\n    vec3 velocity = texture(u_velocityTexture, a_textureCoordinates).rgb;\n    v_velocity = velocity;\n    v_position = position;\n\n    vec3 cellIndex = vec3(floor(position.xyz));\n    v_zIndex = cellIndex.z + u_zOffset; //offset into the right layer\n\n    vec2 textureCoordinates = vec2(\n        v_zIndex * (u_gridResolution.x + 1.0) + cellIndex.x + 0.5,\n        cellIndex.y + 0.5) / vec2((u_gridResolution.x + 1.0) * (u_gridResolution.z + 1.0), u_gridResolution.y + 1.0);\n\n    gl_Position = vec4(textureCoordinates * 2.0 - 1.0, 0.0, 1.0);\n}\n"},function(t,e){t.exports="\r\nout vec4 glFragColor;\r\n\r\nvoid main(){\r\n    glFragColor = vec4(1.);\r\n}"},function(t,e){t.exports="uniform sampler2D tex0;\r\nuniform vec2 sample_offset;\r\nuniform float attenuation;\r\n\r\nin vec2 vUv;\r\n\r\n\r\nout vec4 glFragcolor;\r\nvoid main(){\r\n\tvec3 sum = vec3( 0.0, 0.0, 0.0 );\r\n\tsum += texture( tex0, vUv + -10.0 * sample_offset ).rgb * 0.009167927656011385;\r\n\tsum += texture( tex0, vUv +  -9.0 * sample_offset ).rgb * 0.014053461291849008;\r\n\tsum += texture( tex0, vUv +  -8.0 * sample_offset ).rgb * 0.020595286319257878;\r\n\tsum += texture( tex0, vUv +  -7.0 * sample_offset ).rgb * 0.028855245532226279;\r\n\tsum += texture( tex0, vUv +  -6.0 * sample_offset ).rgb * 0.038650411513543079;\r\n\tsum += texture( tex0, vUv +  -5.0 * sample_offset ).rgb * 0.049494378859311142;\r\n\tsum += texture( tex0, vUv +  -4.0 * sample_offset ).rgb * 0.060594058578763078;\r\n\tsum += texture( tex0, vUv +  -3.0 * sample_offset ).rgb * 0.070921288047096992;\r\n\tsum += texture( tex0, vUv +  -2.0 * sample_offset ).rgb * 0.079358891804948081;\r\n\tsum += texture( tex0, vUv +  -1.0 * sample_offset ).rgb * 0.084895951965930902;\r\n\tsum += texture( tex0, vUv +   0.0 * sample_offset ).rgb * 0.086826196862124602;\r\n\tsum += texture( tex0, vUv +  +1.0 * sample_offset ).rgb * 0.084895951965930902;\r\n\tsum += texture( tex0, vUv +  +2.0 * sample_offset ).rgb * 0.079358891804948081;\r\n\tsum += texture( tex0, vUv +  +3.0 * sample_offset ).rgb * 0.070921288047096992;\r\n\tsum += texture( tex0, vUv +  +4.0 * sample_offset ).rgb * 0.060594058578763078;\r\n\tsum += texture( tex0, vUv +  +5.0 * sample_offset ).rgb * 0.049494378859311142;\r\n\tsum += texture( tex0, vUv +  +6.0 * sample_offset ).rgb * 0.038650411513543079;\r\n\tsum += texture( tex0, vUv +  +7.0 * sample_offset ).rgb * 0.028855245532226279;\r\n\tsum += texture( tex0, vUv +  +8.0 * sample_offset ).rgb * 0.020595286319257878;\r\n\tsum += texture( tex0, vUv +  +9.0 * sample_offset ).rgb * 0.014053461291849008;\r\n\tsum += texture( tex0, vUv + +10.0 * sample_offset ).rgb * 0.009167927656011385;\r\n\r\n\r\n\r\n\tglFragcolor.rgb = attenuation * sum;\r\n    glFragcolor.a = 1.0;\r\n}"},function(t,e){t.exports="\r\n// HSL to RGB Convertion helpers\r\nvec3 HUEtoRGB(float H){\r\n\tH = mod(H,1.0);\r\n\tfloat R = abs(H * 6.0 - 3.0) - 1.0;\r\n\tfloat G = 2.0 - abs(H * 6.0 - 2.0);\r\n\tfloat B = 2.0 - abs(H * 6.0 - 4.0);\r\n\treturn clamp(vec3(R,G,B),0.0,1.0);\r\n}\r\nvec3 HSLtoRGB(vec3 HSL){\r\n\tvec3 RGB = HUEtoRGB(HSL.x);\r\n\tfloat C = (1.0 - abs(2.0 * HSL.z - 1.0)) * HSL.y;\r\n\treturn (RGB - 0.5) * C + HSL.z;\r\n}\r\n\r\nvec3 rgb2Hsv(vec3 c)\r\n{\r\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\r\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\r\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\r\n\r\n    float d = q.x - min(q.w, q.y);\r\n    float e = 1.0e-10;\r\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\r\n}\r\n\r\nconst float eps = 0.0000001;\r\nvec3 rgb2Hsl( vec3 col )\r\n{\r\n    float minc = min( col.r, min(col.g, col.b) );\r\n    float maxc = max( col.r, max(col.g, col.b) );\r\n    vec3  mask = step(col.grr,col.rgb) * step(col.bbg,col.rgb);\r\n    vec3 h = mask * (vec3(0.0,2.0,4.0) + (col.gbr-col.brg)/(maxc-minc + eps)) / 6.0;\r\n    return vec3( fract( 1.0 + h.x + h.y + h.z ),              // H\r\n                 (maxc-minc)/(1.0-abs(minc+maxc-1.0) + eps),  // S\r\n                 (minc+maxc)*0.5 );                           // L\r\n}\r\n"},function(t,e){t.exports="\r\nin vec2 vUv;\r\nuniform sampler2D blurState;\r\nuniform sampler2D normalState;\r\n\r\n\r\nout vec4 glFragColor;\r\nvoid main(){\r\n\r\n    vec4 blur = texture(blurState,vUv);\r\n    vec4 normal = texture(normalState,vUv);\r\n\r\n    vec4 fin = mix(normal,blur,0.7);\r\n\r\n    glFragColor = fin;\r\n\r\n\r\n\r\n}"},function(t,e){t.exports="\r\nuniform vec3 colorPallet[8];\r\nout vec4 glFragColor;\r\n\r\n\r\nin vec3 v_viewSpacePosition;\r\nin float v_speed;\r\nin vec3 v_velocity;\r\n\r\n\r\nvoid main(){\r\n\r\n\r\n    vec3 col = vec3(1.);\r\n\r\n    for(int i = 0; i < 8; ++i){\r\n        col += mix(rgb2Hsl(colorPallet[i]),rgb2Hsl(colorPallet[i + 1]),v_speed + v_velocity);\r\n        col *= smoothstep(vec3(v_velocity),col,vec3(0.6));\r\n        col *= v_speed;\r\n    }\r\n\r\n    float r = 0.0;\r\n    float delta = 0.0;\r\n    float alpha = 1.0;\r\n\r\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n    r = dot(cxy,cxy);\r\n    if(r > 1.0){\r\n        discard;\r\n    }\r\n\r\n\r\n    glFragColor = vec4(col,v_velocity);\r\n\r\n}"},function(t,e){t.exports="precision highp float;\r\n\r\nin vec3 position;\r\n\r\nin vec2 a_textureCoordinates;\r\n\r\nuniform mat4 projectionMatrix;\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 modelMatrix;\r\n\r\nuniform sampler2D u_positionTexture;\r\nuniform sampler2D u_velocityTexture;\r\nuniform float radius;\r\n\r\nout vec3 v_viewSpacePosition;\r\nout float v_speed;\r\nout vec3 v_velocity;\r\n\r\n\r\nvoid main () {\r\n\r\n    vec3 spherePosition = texture(u_positionTexture, a_textureCoordinates).rgb;\r\n\r\n    vec3 velocity = texture(u_velocityTexture, a_textureCoordinates).rgb;\r\n    v_velocity = velocity;\r\n    v_speed = length(velocity);\r\n\r\n\r\n    vec3 pos;\r\n\r\n    gl_PointSize = 0.5 * v_speed;\r\n    if(radius != 0.0){\r\n        pos = position + spherePosition * radius;\r\n    }else{\r\n        pos = position + spherePosition;\r\n    }\r\n\r\n\r\n    v_viewSpacePosition = vec3(modelViewMatrix * vec4(pos, 1.0));\r\n\r\n    gl_Position = projectionMatrix * modelMatrix * vec4(v_viewSpacePosition, 1.0);\r\n\r\n}\r\n"},function(t,e){t.exports="\r\nuniform sampler2D inputTexture;\r\nin  vec2 vUv;\r\nout vec4 glFragColor;\r\nvoid main(){\r\n\r\n\r\n   #ifdef HAS_TEXTURE\r\n        vec4 data = texture(inputTexture,vUv);\r\n        glFragColor = data;\r\n   #else\r\n        glFragColor = vec4(1.0);\r\n   #endif\r\n\r\n }"},function(t,e,i){"use strict";i.r(e);var r=class{constructor(t,e){this.min=[t[0],t[1],t[2]],this.max=[e[0],e[1],e[2]]}randomPoint(){let t=[];for(let e=0;e<3;++e)t[e]=this.min[e]+Math.random()*(this.max[e]-this.min[e]);return t}computeVolume(){let t=1;for(let e=0;e<3;++e)t*=this.max[e]-this.min[e];return t}};function n(t,e=3){let i=[],r=t.length;for(let n=0;n<r;++n){let r=t[n];4===e?i.push(r[0],r[1],r[2],r[3]):3===e?i.push(r[0],r[1],r[2]):i.push(r[0],r[1])}return i=i.map(t=>void 0===t||null===t?0:t)}function o(t,e){for(var i=[],r=t;r<e;)i.push(r),r+=1;return i}function a(t=0,e=1){return t+Math.random()*(e-t+1)}function s(t=0,e=1){return Math.floor(t+Math.random()*(e-t+1))}function l(t,e,i){return e<i?t<e?e:t>i?i:t:t<i?i:t>e?e:t}var u=function(t={node:!1,webglOptions:!1}){let e={alpha:!0,antialias:!0,depth:!0},i=t.webglOptions;!1===i?Object.assign(i,e):(Object.assign(e,i),i=e);let r=t.hasOwnProperty("contextType")?t.contextType:"webgl2",n=(!1!==t.node?t.node:document.createElement("canvas")).getContext(r,i);for(let t in h.prototype)n[t]=h.prototype[t];return Object.assign(n,new h),function(t){let e={FLOAT:t.FLOAT,UNSIGNED_BYTE:t.UNSIGNED_BYTE,UNSIGNED_SHORT:t.UNSIGNED_SHORT,ARRAY_BUFFER:t.ARRAY_BUFFER,ELEMENT_BUFFER:t.ELEMENT_ARRAY_BUFFER,RGBA:t.RGBA,RGB:t.RGB,RGBA16F:t.RGBA16F,TEXTURE_2D:t.TEXTURE_2D,STATIC_DRAW:t.STATIC_DRAW,DYNAMIC_DRAW:t.DYNAMIC_DRAW,TRIANGLES:t.TRIANGLES,TRIANGLE_STRIP:t.TRIANGLE_STRIP,POINTS:t.POINTS,FRAMEBUFFER:t.FRAMEBUFFER,COLOR_ATTACHMENT0:t.COLOR_ATTACHMENT0,CLAMP_TO_EDGE:t.CLAMP_TO_EDGE,LINEAR:t.LINEAR,NEAREST:t.NEAREST,MAG_FILTER:t.TEXTURE_MAG_FILTER,MIN_FILTER:t.TEXTURE_MIN_FILTER,WRAP_S:t.TEXTURE_WRAP_S,WRAP_T:t.TEXTURE_WRAP_T,TEXTURE0:t.TEXTURE0,TEXTURE1:t.TEXTURE1,TEXTURE2:t.TEXTURE2,UNIFORM_BUFFER:t.UNIFORM_BUFFER,PI:3.14149,M_PI:3.14149,M_2_PI:3.14149*3.14149,"2_PI":3.14149*3.14149,sin:Math.sin,cos:Math.cos,tan:Math.tan,random:Math.random,randFloat:a,randInt:s,clamp:l,range:o};window.hasOwnProperty("WebGL2RenderingContext")&&(e.COLOR_ATTACHMENT1=t.COLOR_ATTACHMENT1,e.COLOR_ATTACHMENT2=t.COLOR_ATTACHMENT2,e.COLOR_ATTACHMENT3=t.COLOR_ATTACHMENT3,e.COLOR_ATTACHMENT4=t.COLOR_ATTACHMENT4,e.COLOR_ATTACHMENT5=t.COLOR_ATTACHMENT5);if(!window.GL_CONSTANTS_SET){for(var i in e)window[i]=e[i];window.GL_CONSTANTS_SET=!0}}(n),n};function h(t=window.innerWidth,e=window.innerHeight){this.viewportX=0,this.viewportY=0,this.width=t,this.height=e}h.prototype={resetViewport(t=null,e=null,i=null,r=null){t=0!==t?t:this.viewportX,e=0!==e?e:this.viewportY,i=null!==i?i:this.width,r=null!==r?r:this.height,this.viewport(t,e,i,r)},enableDepthWrite(){return this.depthMask(!0),this},disableDepthWrite(){return this.depthMask(!1),this},clearScreen(t=0,e=0,i=0,r=1){return this.clearColor(t,e,i,r),this.viewport(this.viewportX,this.viewportY,this.canvas.width,this.canvas.height),this.clear(this.COLOR_BUFFER_BIT|this.DEPTH_BUFFER_BIT),this},attachToScreen(t=document.body){return t.appendChild(this.canvas),this},attachTo(t=document.body){return this.attachToScreen(t),this},setViewport(t=0,e=0,i=window.innerWidth,r=window.innerHeight){this.viewport(t,e,i,r)},enableBlending(){return this.enable(this.BLEND),this},disableBlend(){return this.disable(this.BLEND),this},disableBlending(){return this.disable(this.BLEND),this},enableDepth(){return this.enable(this.DEPTH_TEST),this},disableDepth(){return this.disable(this.DEPTH_TEST),this},faceCull(t="BACK"){return this.cullFace(this[t]),this},getCullStatus(){switch(this.getParameter(this.CULL_FACE_MODE)){case this.FRONT:return"FRONT";case this.BACK:return"BACK";case this.FRONT_AND_BACK:return"FRONT AND BACK"}},enableAlphaBlending(){this.enable(this.BLEND),this.blendFunc(this.SRC_ALPHA,this.ONE_MINUS_SRC_ALPHA)},enableAdditiveBlending(){this.enable(this.BLEND),this.blendEquationSeparate(this.FUNC_ADD,this.FUNC_ADD),this.blendFuncSeparate(this.ONE,this.ONE,this.ONE,this.ONE)},setSize(t=window.innerWidth,e=window.innerHeight){return this.canvas.width=t,this.canvas.height=e,this},setFullscreen(t=null){this.canvas.parentElement;return this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.setViewport(),t?window.addEventListener("resize",t):window.addEventListener("resize",()=>{this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.setViewport(0,0,this.canvas.width,this.canvas.height)}),this}};var c=function(t,{indexed:e=!1,size:i=3,usage:r="STATIC_DRAW",data:n=null}={}){let o=null,a="ARRAY_BUFFER";!0===e&&(a="ELEMENT_ARRAY_BUFFER");let s=a;a=t[a];let l=r;r=t[r],(o=t.createBuffer()).data=n,null!==n&&(n instanceof Array||ArrayBuffer.isView(n))&&(e||(n=n instanceof Array?new Float32Array(n):n),t.bindBuffer(a,o),t.bufferData(a,n,r),t.bindBuffer(a,null),o.numelements=null!==n.length?n.length:1);for(let t in d.prototype)o[t]=d.prototype[t];return Object.assign(o,new d(t,[a,s],[r,l],i)),o};function d(t,e,i,r=3){this.gl=t,this.type=e[0],this.vboTypeName=e[1],this.usage=i[0],this.usageName=i[1],this.size=r,this.isBound=!1}d.prototype={bind(){this.gl.bindBuffer(this.type,this),this.isBound=!0},unbind(){this.gl.bindBuffer(this.type,null),this.isBound=!1},updateBuffer(t=!1,e=0){let i=this.type,r=this.gl;if(t){if(t instanceof Array)switch(i){case r.ARRAY_BUFFER:t=new Float32Array(n(t));break;case r.ELEMENT_ARRAY_BUFFER:t=new Uint16Array(n(t))}r.bufferSubData(i,e,t)}},bufferData(t,e=this.type){if(null!==(t=void 0!==t?t:this.data)&&void 0!==t){if(!(!t instanceof Array&&!t instanceof ArrayBuffer)){if(t[0]instanceof Array)switch(e){case this.gl.ARRAY_BUFFER:t=new Float32Array(n(t));break;case this.gl.ELEMENT_ARRAY_BUFFER:t=new Uint16Array(n(t))}if(t instanceof Array)switch(e){case this.gl.ARRAY_BUFFER:t=new Float32Array(t);break;case this.gl.ELEMENT_ARRAY_BUFFER:t=new Uint16Array(t)}this.isBound?this.gl.bufferData(this.type,t,this.usage):(this.bind(),this.gl.bufferData(this.type,t,this.usage),this.unbind()),this.data=t}}else console.warn("buffer data called on VBO without any vertex data")}};var f={EPSILON:1e-6};f.ARRAY_TYPE="undefined"!=typeof Float32Array?Float32Array:Array,f.RANDOM=Math.random,f.ENABLE_SIMD=!1,f.SIMD_AVAILABLE=f.ARRAY_TYPE===window.Float32Array&&"SIMD"in window,f.USE_SIMD=f.ENABLE_SIMD&&f.SIMD_AVAILABLE,f.setMatrixArrayType=function(t){f.ARRAY_TYPE=t};var m=Math.PI/180;f.toRadian=function(t){return t*m},f.equals=function(t,e){return Math.abs(t-e)<=f.EPSILON*Math.max(1,Math.abs(t),Math.abs(e))};var x=f,g={scalar:{},SIMD:{},create:function(){var t=new x.ARRAY_TYPE(16);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},clone:function(t){var e=new x.ARRAY_TYPE(16);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},fromValues:function(t,e,i,r,n,o,a,s,l,u,h,c,d,f,m,g){var v=new x.ARRAY_TYPE(16);return v[0]=t,v[1]=e,v[2]=i,v[3]=r,v[4]=n,v[5]=o,v[6]=a,v[7]=s,v[8]=l,v[9]=u,v[10]=h,v[11]=c,v[12]=d,v[13]=f,v[14]=m,v[15]=g,v},set:function(t,e,i,r,n,o,a,s,l,u,h,c,d,f,m,x,g){return t[0]=e,t[1]=i,t[2]=r,t[3]=n,t[4]=o,t[5]=a,t[6]=s,t[7]=l,t[8]=u,t[9]=h,t[10]=c,t[11]=d,t[12]=f,t[13]=m,t[14]=x,t[15]=g,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t}};g.scalar.transpose=function(t,e){if(t===e){var i=e[1],r=e[2],n=e[3],o=e[6],a=e[7],s=e[11];t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=i,t[6]=e[9],t[7]=e[13],t[8]=r,t[9]=o,t[11]=e[14],t[12]=n,t[13]=a,t[14]=s}else t[0]=e[0],t[1]=e[4],t[2]=e[8],t[3]=e[12],t[4]=e[1],t[5]=e[5],t[6]=e[9],t[7]=e[13],t[8]=e[2],t[9]=e[6],t[10]=e[10],t[11]=e[14],t[12]=e[3],t[13]=e[7],t[14]=e[11],t[15]=e[15];return t},g.SIMD.transpose=function(t,e){var i,r,n,o,a,s,l,u,h,c;return i=SIMD.Float32x4.load(e,0),r=SIMD.Float32x4.load(e,4),n=SIMD.Float32x4.load(e,8),o=SIMD.Float32x4.load(e,12),a=SIMD.Float32x4.shuffle(i,r,0,1,4,5),s=SIMD.Float32x4.shuffle(n,o,0,1,4,5),l=SIMD.Float32x4.shuffle(a,s,0,2,4,6),u=SIMD.Float32x4.shuffle(a,s,1,3,5,7),SIMD.Float32x4.store(t,0,l),SIMD.Float32x4.store(t,4,u),a=SIMD.Float32x4.shuffle(i,r,2,3,6,7),s=SIMD.Float32x4.shuffle(n,o,2,3,6,7),h=SIMD.Float32x4.shuffle(a,s,0,2,4,6),c=SIMD.Float32x4.shuffle(a,s,1,3,5,7),SIMD.Float32x4.store(t,8,h),SIMD.Float32x4.store(t,12,c),t},g.transpose=x.USE_SIMD?g.SIMD.transpose:g.scalar.transpose,g.scalar.invert=function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],m=e[12],x=e[13],g=e[14],v=e[15],p=i*s-r*a,T=i*l-n*a,F=i*u-o*a,M=r*l-n*s,E=r*u-o*s,_=n*u-o*l,b=h*x-c*m,R=h*g-d*m,D=h*v-f*m,S=c*g-d*x,I=c*v-f*x,A=d*v-f*g,w=p*A-T*I+F*S+M*D-E*R+_*b;return w?(w=1/w,t[0]=(s*A-l*I+u*S)*w,t[1]=(n*I-r*A-o*S)*w,t[2]=(x*_-g*E+v*M)*w,t[3]=(d*E-c*_-f*M)*w,t[4]=(l*D-a*A-u*R)*w,t[5]=(i*A-n*D+o*R)*w,t[6]=(g*F-m*_-v*T)*w,t[7]=(h*_-d*F+f*T)*w,t[8]=(a*I-s*D+u*b)*w,t[9]=(r*D-i*I-o*b)*w,t[10]=(m*E-x*F+v*p)*w,t[11]=(c*F-h*E-f*p)*w,t[12]=(s*R-a*S-l*b)*w,t[13]=(i*S-r*R+n*b)*w,t[14]=(x*T-m*M-g*p)*w,t[15]=(h*M-c*T+d*p)*w,t):null},g.SIMD.invert=function(t,e){var i,r,n,o,a,s,l,u,h,c,d=SIMD.Float32x4.load(e,0),f=SIMD.Float32x4.load(e,4),m=SIMD.Float32x4.load(e,8),x=SIMD.Float32x4.load(e,12);return a=SIMD.Float32x4.shuffle(d,f,0,1,4,5),r=SIMD.Float32x4.shuffle(m,x,0,1,4,5),i=SIMD.Float32x4.shuffle(a,r,0,2,4,6),r=SIMD.Float32x4.shuffle(r,a,1,3,5,7),a=SIMD.Float32x4.shuffle(d,f,2,3,6,7),o=SIMD.Float32x4.shuffle(m,x,2,3,6,7),n=SIMD.Float32x4.shuffle(a,o,0,2,4,6),o=SIMD.Float32x4.shuffle(o,a,1,3,5,7),a=SIMD.Float32x4.mul(n,o),a=SIMD.Float32x4.swizzle(a,1,0,3,2),s=SIMD.Float32x4.mul(r,a),l=SIMD.Float32x4.mul(i,a),a=SIMD.Float32x4.swizzle(a,2,3,0,1),s=SIMD.Float32x4.sub(SIMD.Float32x4.mul(r,a),s),l=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,a),l),l=SIMD.Float32x4.swizzle(l,2,3,0,1),a=SIMD.Float32x4.mul(r,n),a=SIMD.Float32x4.swizzle(a,1,0,3,2),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,a),s),h=SIMD.Float32x4.mul(i,a),a=SIMD.Float32x4.swizzle(a,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(o,a)),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,a),h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),a=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(r,2,3,0,1),o),a=SIMD.Float32x4.swizzle(a,1,0,3,2),n=SIMD.Float32x4.swizzle(n,2,3,0,1),s=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,a),s),u=SIMD.Float32x4.mul(i,a),a=SIMD.Float32x4.swizzle(a,2,3,0,1),s=SIMD.Float32x4.sub(s,SIMD.Float32x4.mul(n,a)),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(i,a),u),u=SIMD.Float32x4.swizzle(u,2,3,0,1),a=SIMD.Float32x4.mul(i,r),a=SIMD.Float32x4.swizzle(a,1,0,3,2),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,a),u),h=SIMD.Float32x4.sub(SIMD.Float32x4.mul(n,a),h),a=SIMD.Float32x4.swizzle(a,2,3,0,1),u=SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,a),u),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(n,a)),a=SIMD.Float32x4.mul(i,o),a=SIMD.Float32x4.swizzle(a,1,0,3,2),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(n,a)),u=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,a),u),a=SIMD.Float32x4.swizzle(a,2,3,0,1),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(n,a),l),u=SIMD.Float32x4.sub(u,SIMD.Float32x4.mul(r,a)),a=SIMD.Float32x4.mul(i,n),a=SIMD.Float32x4.swizzle(a,1,0,3,2),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(o,a),l),h=SIMD.Float32x4.sub(h,SIMD.Float32x4.mul(r,a)),a=SIMD.Float32x4.swizzle(a,2,3,0,1),l=SIMD.Float32x4.sub(l,SIMD.Float32x4.mul(o,a)),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(r,a),h),c=SIMD.Float32x4.mul(i,s),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,2,3,0,1),c),c=SIMD.Float32x4.add(SIMD.Float32x4.swizzle(c,1,0,3,2),c),a=SIMD.Float32x4.reciprocalApproximation(c),c=SIMD.Float32x4.sub(SIMD.Float32x4.add(a,a),SIMD.Float32x4.mul(c,SIMD.Float32x4.mul(a,a))),(c=SIMD.Float32x4.swizzle(c,0,0,0,0))?(SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(c,s)),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(c,l)),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(c,u)),SIMD.Float32x4.store(t,12,SIMD.Float32x4.mul(c,h)),t):null},g.invert=x.USE_SIMD?g.SIMD.invert:g.scalar.invert,g.scalar.adjoint=function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],m=e[12],x=e[13],g=e[14],v=e[15];return t[0]=s*(d*v-f*g)-c*(l*v-u*g)+x*(l*f-u*d),t[1]=-(r*(d*v-f*g)-c*(n*v-o*g)+x*(n*f-o*d)),t[2]=r*(l*v-u*g)-s*(n*v-o*g)+x*(n*u-o*l),t[3]=-(r*(l*f-u*d)-s*(n*f-o*d)+c*(n*u-o*l)),t[4]=-(a*(d*v-f*g)-h*(l*v-u*g)+m*(l*f-u*d)),t[5]=i*(d*v-f*g)-h*(n*v-o*g)+m*(n*f-o*d),t[6]=-(i*(l*v-u*g)-a*(n*v-o*g)+m*(n*u-o*l)),t[7]=i*(l*f-u*d)-a*(n*f-o*d)+h*(n*u-o*l),t[8]=a*(c*v-f*x)-h*(s*v-u*x)+m*(s*f-u*c),t[9]=-(i*(c*v-f*x)-h*(r*v-o*x)+m*(r*f-o*c)),t[10]=i*(s*v-u*x)-a*(r*v-o*x)+m*(r*u-o*s),t[11]=-(i*(s*f-u*c)-a*(r*f-o*c)+h*(r*u-o*s)),t[12]=-(a*(c*g-d*x)-h*(s*g-l*x)+m*(s*d-l*c)),t[13]=i*(c*g-d*x)-h*(r*g-n*x)+m*(r*d-n*c),t[14]=-(i*(s*g-l*x)-a*(r*g-n*x)+m*(r*l-n*s)),t[15]=i*(s*d-l*c)-a*(r*d-n*c)+h*(r*l-n*s),t},g.SIMD.adjoint=function(t,e){var i,r,n,o,a,s,l,u,h,c,d,f,m;return i=SIMD.Float32x4.load(e,0),r=SIMD.Float32x4.load(e,4),n=SIMD.Float32x4.load(e,8),o=SIMD.Float32x4.load(e,12),h=SIMD.Float32x4.shuffle(i,r,0,1,4,5),s=SIMD.Float32x4.shuffle(n,o,0,1,4,5),a=SIMD.Float32x4.shuffle(h,s,0,2,4,6),s=SIMD.Float32x4.shuffle(s,h,1,3,5,7),h=SIMD.Float32x4.shuffle(i,r,2,3,6,7),u=SIMD.Float32x4.shuffle(n,o,2,3,6,7),l=SIMD.Float32x4.shuffle(h,u,0,2,4,6),u=SIMD.Float32x4.shuffle(u,h,1,3,5,7),h=SIMD.Float32x4.mul(l,u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),c=SIMD.Float32x4.mul(s,h),d=SIMD.Float32x4.mul(a,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(SIMD.Float32x4.mul(s,h),c),d=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,h),d),d=SIMD.Float32x4.swizzle(d,2,3,0,1),h=SIMD.Float32x4.mul(s,l),h=SIMD.Float32x4.swizzle(h,1,0,3,2),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),c),m=SIMD.Float32x4.mul(a,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(u,h)),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,h),m),m=SIMD.Float32x4.swizzle(m,2,3,0,1),h=SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,2,3,0,1),u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),l=SIMD.Float32x4.swizzle(l,2,3,0,1),c=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,h),c),f=SIMD.Float32x4.mul(a,h),h=SIMD.Float32x4.swizzle(h,2,3,0,1),c=SIMD.Float32x4.sub(c,SIMD.Float32x4.mul(l,h)),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,h),f),f=SIMD.Float32x4.swizzle(f,2,3,0,1),h=SIMD.Float32x4.mul(a,s),h=SIMD.Float32x4.swizzle(h,1,0,3,2),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),f),m=SIMD.Float32x4.sub(SIMD.Float32x4.mul(l,h),m),h=SIMD.Float32x4.swizzle(h,2,3,0,1),f=SIMD.Float32x4.sub(SIMD.Float32x4.mul(u,h),f),m=SIMD.Float32x4.sub(m,SIMD.Float32x4.mul(l,h)),h=SIMD.Float32x4.mul(a,u),h=SIMD.Float32x4.swizzle(h,1,0,3,2),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(l,h)),f=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,h),f),h=SIMD.Float32x4.swizzle(h,2,3,0,1),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(l,h),d),f=SIMD.Float32x4.sub(f,SIMD.Float32x4.mul(s,h)),h=SIMD.Float32x4.mul(a,l),h=SIMD.Float32x4.swizzle(h,1,0,3,2),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(u,h),d),m=SIMD.Float32x4.sub(m,SIMD.Float32x4.mul(s,h)),h=SIMD.Float32x4.swizzle(h,2,3,0,1),d=SIMD.Float32x4.sub(d,SIMD.Float32x4.mul(u,h)),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(s,h),m),SIMD.Float32x4.store(t,0,c),SIMD.Float32x4.store(t,4,d),SIMD.Float32x4.store(t,8,f),SIMD.Float32x4.store(t,12,m),t},g.adjoint=x.USE_SIMD?g.SIMD.adjoint:g.scalar.adjoint,g.determinant=function(t){var e=t[0],i=t[1],r=t[2],n=t[3],o=t[4],a=t[5],s=t[6],l=t[7],u=t[8],h=t[9],c=t[10],d=t[11],f=t[12],m=t[13],x=t[14],g=t[15];return(e*a-i*o)*(c*g-d*x)-(e*s-r*o)*(h*g-d*m)+(e*l-n*o)*(h*x-c*m)+(i*s-r*a)*(u*g-d*f)-(i*l-n*a)*(u*x-c*f)+(r*l-n*s)*(u*m-h*f)},g.SIMD.multiply=function(t,e,i){var r=SIMD.Float32x4.load(e,0),n=SIMD.Float32x4.load(e,4),o=SIMD.Float32x4.load(e,8),a=SIMD.Float32x4.load(e,12),s=SIMD.Float32x4.load(i,0),l=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,2,2,2,2),o),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(s,3,3,3,3),a))));SIMD.Float32x4.store(t,0,l);var u=SIMD.Float32x4.load(i,4),h=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,2,2,2,2),o),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(u,3,3,3,3),a))));SIMD.Float32x4.store(t,4,h);var c=SIMD.Float32x4.load(i,8),d=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,2,2,2,2),o),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(c,3,3,3,3),a))));SIMD.Float32x4.store(t,8,d);var f=SIMD.Float32x4.load(i,12),m=SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,0,0,0,0),r),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,1,1,1,1),n),SIMD.Float32x4.add(SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,2,2,2,2),o),SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(f,3,3,3,3),a))));return SIMD.Float32x4.store(t,12,m),t},g.scalar.multiply=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=e[9],f=e[10],m=e[11],x=e[12],g=e[13],v=e[14],p=e[15],T=i[0],F=i[1],M=i[2],E=i[3];return t[0]=T*r+F*s+M*c+E*x,t[1]=T*n+F*l+M*d+E*g,t[2]=T*o+F*u+M*f+E*v,t[3]=T*a+F*h+M*m+E*p,T=i[4],F=i[5],M=i[6],E=i[7],t[4]=T*r+F*s+M*c+E*x,t[5]=T*n+F*l+M*d+E*g,t[6]=T*o+F*u+M*f+E*v,t[7]=T*a+F*h+M*m+E*p,T=i[8],F=i[9],M=i[10],E=i[11],t[8]=T*r+F*s+M*c+E*x,t[9]=T*n+F*l+M*d+E*g,t[10]=T*o+F*u+M*f+E*v,t[11]=T*a+F*h+M*m+E*p,T=i[12],F=i[13],M=i[14],E=i[15],t[12]=T*r+F*s+M*c+E*x,t[13]=T*n+F*l+M*d+E*g,t[14]=T*o+F*u+M*f+E*v,t[15]=T*a+F*h+M*m+E*p,t},g.multiply=x.USE_SIMD?g.SIMD.multiply:g.scalar.multiply,g.mul=g.multiply,g.scalar.translate=function(t,e,i){var r,n,o,a,s,l,u,h,c,d,f,m,x=i[0],g=i[1],v=i[2];return e===t?(t[12]=e[0]*x+e[4]*g+e[8]*v+e[12],t[13]=e[1]*x+e[5]*g+e[9]*v+e[13],t[14]=e[2]*x+e[6]*g+e[10]*v+e[14],t[15]=e[3]*x+e[7]*g+e[11]*v+e[15]):(r=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=e[9],f=e[10],m=e[11],t[0]=r,t[1]=n,t[2]=o,t[3]=a,t[4]=s,t[5]=l,t[6]=u,t[7]=h,t[8]=c,t[9]=d,t[10]=f,t[11]=m,t[12]=r*x+s*g+c*v+e[12],t[13]=n*x+l*g+d*v+e[13],t[14]=o*x+u*g+f*v+e[14],t[15]=a*x+h*g+m*v+e[15]),t},g.SIMD.translate=function(t,e,i){var r=SIMD.Float32x4.load(e,0),n=SIMD.Float32x4.load(e,4),o=SIMD.Float32x4.load(e,8),a=SIMD.Float32x4.load(e,12),s=SIMD.Float32x4(i[0],i[1],i[2],0);e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11]),r=SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(s,0,0,0,0)),n=SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(s,1,1,1,1)),o=SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(s,2,2,2,2));var l=SIMD.Float32x4.add(r,SIMD.Float32x4.add(n,SIMD.Float32x4.add(o,a)));return SIMD.Float32x4.store(t,12,l),t},g.translate=x.USE_SIMD?g.SIMD.translate:g.scalar.translate,g.scalar.scale=function(t,e,i){var r=i[0],n=i[1],o=i[2];return t[0]=e[0]*r,t[1]=e[1]*r,t[2]=e[2]*r,t[3]=e[3]*r,t[4]=e[4]*n,t[5]=e[5]*n,t[6]=e[6]*n,t[7]=e[7]*n,t[8]=e[8]*o,t[9]=e[9]*o,t[10]=e[10]*o,t[11]=e[11]*o,t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},g.SIMD.scale=function(t,e,i){var r,n,o,a=SIMD.Float32x4(i[0],i[1],i[2],0);return r=SIMD.Float32x4.load(e,0),SIMD.Float32x4.store(t,0,SIMD.Float32x4.mul(r,SIMD.Float32x4.swizzle(a,0,0,0,0))),n=SIMD.Float32x4.load(e,4),SIMD.Float32x4.store(t,4,SIMD.Float32x4.mul(n,SIMD.Float32x4.swizzle(a,1,1,1,1))),o=SIMD.Float32x4.load(e,8),SIMD.Float32x4.store(t,8,SIMD.Float32x4.mul(o,SIMD.Float32x4.swizzle(a,2,2,2,2))),t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},g.scale=x.USE_SIMD?g.SIMD.scale:g.scalar.scale,g.rotate=function(t,e,i,r){var n,o,a,s,l,u,h,c,d,f,m,g,v,p,T,F,M,E,_,b,R,D,S,I,A=r[0],w=r[1],y=r[2],P=Math.sqrt(A*A+w*w+y*y);return Math.abs(P)<x.EPSILON?null:(A*=P=1/P,w*=P,y*=P,n=Math.sin(i),a=1-(o=Math.cos(i)),s=e[0],l=e[1],u=e[2],h=e[3],c=e[4],d=e[5],f=e[6],m=e[7],g=e[8],v=e[9],p=e[10],T=e[11],F=A*A*a+o,M=w*A*a+y*n,E=y*A*a-w*n,_=A*w*a-y*n,b=w*w*a+o,R=y*w*a+A*n,D=A*y*a+w*n,S=w*y*a-A*n,I=y*y*a+o,t[0]=s*F+c*M+g*E,t[1]=l*F+d*M+v*E,t[2]=u*F+f*M+p*E,t[3]=h*F+m*M+T*E,t[4]=s*_+c*b+g*R,t[5]=l*_+d*b+v*R,t[6]=u*_+f*b+p*R,t[7]=h*_+m*b+T*R,t[8]=s*D+c*S+g*I,t[9]=l*D+d*S+v*I,t[10]=u*D+f*S+p*I,t[11]=h*D+m*S+T*I,e!==t&&(t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t)},g.scalar.rotateX=function(t,e,i){var r=Math.sin(i),n=Math.cos(i),o=e[4],a=e[5],s=e[6],l=e[7],u=e[8],h=e[9],c=e[10],d=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=o*n+u*r,t[5]=a*n+h*r,t[6]=s*n+c*r,t[7]=l*n+d*r,t[8]=u*n-o*r,t[9]=h*n-a*r,t[10]=c*n-s*r,t[11]=d*n-l*r,t},g.SIMD.rotateX=function(t,e,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var o=SIMD.Float32x4.load(e,4),a=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(t,4,SIMD.Float32x4.add(SIMD.Float32x4.mul(o,n),SIMD.Float32x4.mul(a,r))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,n),SIMD.Float32x4.mul(o,r))),t},g.rotateX=x.USE_SIMD?g.SIMD.rotateX:g.scalar.rotateX,g.scalar.rotateY=function(t,e,i){var r=Math.sin(i),n=Math.cos(i),o=e[0],a=e[1],s=e[2],l=e[3],u=e[8],h=e[9],c=e[10],d=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*n-u*r,t[1]=a*n-h*r,t[2]=s*n-c*r,t[3]=l*n-d*r,t[8]=o*r+u*n,t[9]=a*r+h*n,t[10]=s*r+c*n,t[11]=l*r+d*n,t},g.SIMD.rotateY=function(t,e,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var o=SIMD.Float32x4.load(e,0),a=SIMD.Float32x4.load(e,8);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.sub(SIMD.Float32x4.mul(o,n),SIMD.Float32x4.mul(a,r))),SIMD.Float32x4.store(t,8,SIMD.Float32x4.add(SIMD.Float32x4.mul(o,r),SIMD.Float32x4.mul(a,n))),t},g.rotateY=x.USE_SIMD?g.SIMD.rotateY:g.scalar.rotateY,g.scalar.rotateZ=function(t,e,i){var r=Math.sin(i),n=Math.cos(i),o=e[0],a=e[1],s=e[2],l=e[3],u=e[4],h=e[5],c=e[6],d=e[7];return e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=o*n+u*r,t[1]=a*n+h*r,t[2]=s*n+c*r,t[3]=l*n+d*r,t[4]=u*n-o*r,t[5]=h*n-a*r,t[6]=c*n-s*r,t[7]=d*n-l*r,t},g.SIMD.rotateZ=function(t,e,i){var r=SIMD.Float32x4.splat(Math.sin(i)),n=SIMD.Float32x4.splat(Math.cos(i));e!==t&&(t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]);var o=SIMD.Float32x4.load(e,0),a=SIMD.Float32x4.load(e,4);return SIMD.Float32x4.store(t,0,SIMD.Float32x4.add(SIMD.Float32x4.mul(o,n),SIMD.Float32x4.mul(a,r))),SIMD.Float32x4.store(t,4,SIMD.Float32x4.sub(SIMD.Float32x4.mul(a,n),SIMD.Float32x4.mul(o,r))),t},g.rotateZ=x.USE_SIMD?g.SIMD.rotateZ:g.scalar.rotateZ,g.fromTranslation=function(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=e[0],t[13]=e[1],t[14]=e[2],t[15]=1,t},g.fromScaling=function(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=e[1],t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=e[2],t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},g.fromRotation=function(t,e,i){var r,n,o,a=i[0],s=i[1],l=i[2],u=Math.sqrt(a*a+s*s+l*l);return Math.abs(u)<x.EPSILON?null:(a*=u=1/u,s*=u,l*=u,r=Math.sin(e),o=1-(n=Math.cos(e)),t[0]=a*a*o+n,t[1]=s*a*o+l*r,t[2]=l*a*o-s*r,t[3]=0,t[4]=a*s*o-l*r,t[5]=s*s*o+n,t[6]=l*s*o+a*r,t[7]=0,t[8]=a*l*o+s*r,t[9]=s*l*o-a*r,t[10]=l*l*o+n,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t)},g.fromXRotation=function(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=r,t[6]=i,t[7]=0,t[8]=0,t[9]=-i,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},g.fromYRotation=function(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=r,t[1]=0,t[2]=-i,t[3]=0,t[4]=0,t[5]=1,t[6]=0,t[7]=0,t[8]=i,t[9]=0,t[10]=r,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},g.fromZRotation=function(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=r,t[1]=i,t[2]=0,t[3]=0,t[4]=-i,t[5]=r,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=1,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},g.fromRotationTranslation=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=e[3],s=r+r,l=n+n,u=o+o,h=r*s,c=r*l,d=r*u,f=n*l,m=n*u,x=o*u,g=a*s,v=a*l,p=a*u;return t[0]=1-(f+x),t[1]=c+p,t[2]=d-v,t[3]=0,t[4]=c-p,t[5]=1-(h+x),t[6]=m+g,t[7]=0,t[8]=d+v,t[9]=m-g,t[10]=1-(h+f),t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t},g.getTranslation=function(t,e){return t[0]=e[12],t[1]=e[13],t[2]=e[14],t},g.getRotation=function(t,e){var i=e[0]+e[5]+e[10],r=0;return i>0?(r=2*Math.sqrt(i+1),t[3]=.25*r,t[0]=(e[6]-e[9])/r,t[1]=(e[8]-e[2])/r,t[2]=(e[1]-e[4])/r):e[0]>e[5]&e[0]>e[10]?(r=2*Math.sqrt(1+e[0]-e[5]-e[10]),t[3]=(e[6]-e[9])/r,t[0]=.25*r,t[1]=(e[1]+e[4])/r,t[2]=(e[8]+e[2])/r):e[5]>e[10]?(r=2*Math.sqrt(1+e[5]-e[0]-e[10]),t[3]=(e[8]-e[2])/r,t[0]=(e[1]+e[4])/r,t[1]=.25*r,t[2]=(e[6]+e[9])/r):(r=2*Math.sqrt(1+e[10]-e[0]-e[5]),t[3]=(e[1]-e[4])/r,t[0]=(e[8]+e[2])/r,t[1]=(e[6]+e[9])/r,t[2]=.25*r),t},g.fromRotationTranslationScale=function(t,e,i,r){var n=e[0],o=e[1],a=e[2],s=e[3],l=n+n,u=o+o,h=a+a,c=n*l,d=n*u,f=n*h,m=o*u,x=o*h,g=a*h,v=s*l,p=s*u,T=s*h,F=r[0],M=r[1],E=r[2];return t[0]=(1-(m+g))*F,t[1]=(d+T)*F,t[2]=(f-p)*F,t[3]=0,t[4]=(d-T)*M,t[5]=(1-(c+g))*M,t[6]=(x+v)*M,t[7]=0,t[8]=(f+p)*E,t[9]=(x-v)*E,t[10]=(1-(c+m))*E,t[11]=0,t[12]=i[0],t[13]=i[1],t[14]=i[2],t[15]=1,t},g.fromRotationTranslationScaleOrigin=function(t,e,i,r,n){var o=e[0],a=e[1],s=e[2],l=e[3],u=o+o,h=a+a,c=s+s,d=o*u,f=o*h,m=o*c,x=a*h,g=a*c,v=s*c,p=l*u,T=l*h,F=l*c,M=r[0],E=r[1],_=r[2],b=n[0],R=n[1],D=n[2];return t[0]=(1-(x+v))*M,t[1]=(f+F)*M,t[2]=(m-T)*M,t[3]=0,t[4]=(f-F)*E,t[5]=(1-(d+v))*E,t[6]=(g+p)*E,t[7]=0,t[8]=(m+T)*_,t[9]=(g-p)*_,t[10]=(1-(d+x))*_,t[11]=0,t[12]=i[0]+b-(t[0]*b+t[4]*R+t[8]*D),t[13]=i[1]+R-(t[1]*b+t[5]*R+t[9]*D),t[14]=i[2]+D-(t[2]*b+t[6]*R+t[10]*D),t[15]=1,t},g.fromQuat=function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=i+i,s=r+r,l=n+n,u=i*a,h=r*a,c=r*s,d=n*a,f=n*s,m=n*l,x=o*a,g=o*s,v=o*l;return t[0]=1-c-m,t[1]=h+v,t[2]=d-g,t[3]=0,t[4]=h-v,t[5]=1-u-m,t[6]=f+x,t[7]=0,t[8]=d+g,t[9]=f-x,t[10]=1-u-c,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,t},g.frustum=function(t,e,i,r,n,o,a){var s=1/(i-e),l=1/(n-r),u=1/(o-a);return t[0]=2*o*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=2*o*l,t[6]=0,t[7]=0,t[8]=(i+e)*s,t[9]=(n+r)*l,t[10]=(a+o)*u,t[11]=-1,t[12]=0,t[13]=0,t[14]=a*o*2*u,t[15]=0,t},g.perspective=function(t,e,i,r,n){var o=1/Math.tan(e/2),a=1/(r-n);return t[0]=o/i,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=o,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=(n+r)*a,t[11]=-1,t[12]=0,t[13]=0,t[14]=2*n*r*a,t[15]=0,t},g.perspectiveFromFieldOfView=function(t,e,i,r){var n=Math.tan(e.upDegrees*Math.PI/180),o=Math.tan(e.downDegrees*Math.PI/180),a=Math.tan(e.leftDegrees*Math.PI/180),s=Math.tan(e.rightDegrees*Math.PI/180),l=2/(a+s),u=2/(n+o);return t[0]=l,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=u,t[6]=0,t[7]=0,t[8]=-(a-s)*l*.5,t[9]=(n-o)*u*.5,t[10]=r/(i-r),t[11]=-1,t[12]=0,t[13]=0,t[14]=r*i/(i-r),t[15]=0,t},g.ortho=function(t,e,i,r,n,o,a){var s=1/(e-i),l=1/(r-n),u=1/(o-a);return t[0]=-2*s,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=-2*l,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[10]=2*u,t[11]=0,t[12]=(e+i)*s,t[13]=(n+r)*l,t[14]=(a+o)*u,t[15]=1,t},g.lookAt=function(t,e,i,r){var n,o,a,s,l,u,h,c,d,f,m=e[0],v=e[1],p=e[2],T=r[0],F=r[1],M=r[2],E=i[0],_=i[1],b=i[2];return Math.abs(m-E)<x.EPSILON&&Math.abs(v-_)<x.EPSILON&&Math.abs(p-b)<x.EPSILON?g.identity(t):(h=m-E,c=v-_,d=p-b,n=F*(d*=f=1/Math.sqrt(h*h+c*c+d*d))-M*(c*=f),o=M*(h*=f)-T*d,a=T*c-F*h,(f=Math.sqrt(n*n+o*o+a*a))?(n*=f=1/f,o*=f,a*=f):(n=0,o=0,a=0),s=c*a-d*o,l=d*n-h*a,u=h*o-c*n,(f=Math.sqrt(s*s+l*l+u*u))?(s*=f=1/f,l*=f,u*=f):(s=0,l=0,u=0),t[0]=n,t[1]=s,t[2]=h,t[3]=0,t[4]=o,t[5]=l,t[6]=c,t[7]=0,t[8]=a,t[9]=u,t[10]=d,t[11]=0,t[12]=-(n*m+o*v+a*p),t[13]=-(s*m+l*v+u*p),t[14]=-(h*m+c*v+d*p),t[15]=1,t)},g.str=function(t){return"mat4("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+", "+t[9]+", "+t[10]+", "+t[11]+", "+t[12]+", "+t[13]+", "+t[14]+", "+t[15]+")"},g.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2)+Math.pow(t[9],2)+Math.pow(t[10],2)+Math.pow(t[11],2)+Math.pow(t[12],2)+Math.pow(t[13],2)+Math.pow(t[14],2)+Math.pow(t[15],2))},g.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t[9]=e[9]+i[9],t[10]=e[10]+i[10],t[11]=e[11]+i[11],t[12]=e[12]+i[12],t[13]=e[13]+i[13],t[14]=e[14]+i[14],t[15]=e[15]+i[15],t},g.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t[9]=e[9]-i[9],t[10]=e[10]-i[10],t[11]=e[11]-i[11],t[12]=e[12]-i[12],t[13]=e[13]-i[13],t[14]=e[14]-i[14],t[15]=e[15]-i[15],t},g.sub=g.subtract,g.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t[9]=e[9]*i,t[10]=e[10]*i,t[11]=e[11]*i,t[12]=e[12]*i,t[13]=e[13]*i,t[14]=e[14]*i,t[15]=e[15]*i,t},g.multiplyScalarAndAdd=function(t,e,i,r){return t[0]=e[0]+i[0]*r,t[1]=e[1]+i[1]*r,t[2]=e[2]+i[2]*r,t[3]=e[3]+i[3]*r,t[4]=e[4]+i[4]*r,t[5]=e[5]+i[5]*r,t[6]=e[6]+i[6]*r,t[7]=e[7]+i[7]*r,t[8]=e[8]+i[8]*r,t[9]=e[9]+i[9]*r,t[10]=e[10]+i[10]*r,t[11]=e[11]+i[11]*r,t[12]=e[12]+i[12]*r,t[13]=e[13]+i[13]*r,t[14]=e[14]+i[14]*r,t[15]=e[15]+i[15]*r,t},g.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]&&t[9]===e[9]&&t[10]===e[10]&&t[11]===e[11]&&t[12]===e[12]&&t[13]===e[13]&&t[14]===e[14]&&t[15]===e[15]},g.equals=function(t,e){var i=t[0],r=t[1],n=t[2],o=t[3],a=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=t[9],d=t[10],f=t[11],m=t[12],g=t[13],v=t[14],p=t[15],T=e[0],F=e[1],M=e[2],E=e[3],_=e[4],b=e[5],R=e[6],D=e[7],S=e[8],I=e[9],A=e[10],w=e[11],y=e[12],P=e[13],U=e[14],z=e[15];return Math.abs(i-T)<=x.EPSILON*Math.max(1,Math.abs(i),Math.abs(T))&&Math.abs(r-F)<=x.EPSILON*Math.max(1,Math.abs(r),Math.abs(F))&&Math.abs(n-M)<=x.EPSILON*Math.max(1,Math.abs(n),Math.abs(M))&&Math.abs(o-E)<=x.EPSILON*Math.max(1,Math.abs(o),Math.abs(E))&&Math.abs(a-_)<=x.EPSILON*Math.max(1,Math.abs(a),Math.abs(_))&&Math.abs(s-b)<=x.EPSILON*Math.max(1,Math.abs(s),Math.abs(b))&&Math.abs(l-R)<=x.EPSILON*Math.max(1,Math.abs(l),Math.abs(R))&&Math.abs(u-D)<=x.EPSILON*Math.max(1,Math.abs(u),Math.abs(D))&&Math.abs(h-S)<=x.EPSILON*Math.max(1,Math.abs(h),Math.abs(S))&&Math.abs(c-I)<=x.EPSILON*Math.max(1,Math.abs(c),Math.abs(I))&&Math.abs(d-A)<=x.EPSILON*Math.max(1,Math.abs(d),Math.abs(A))&&Math.abs(f-w)<=x.EPSILON*Math.max(1,Math.abs(f),Math.abs(w))&&Math.abs(m-y)<=x.EPSILON*Math.max(1,Math.abs(m),Math.abs(y))&&Math.abs(g-P)<=x.EPSILON*Math.max(1,Math.abs(g),Math.abs(P))&&Math.abs(v-U)<=x.EPSILON*Math.max(1,Math.abs(v),Math.abs(U))&&Math.abs(p-z)<=x.EPSILON*Math.max(1,Math.abs(p),Math.abs(z))};var v=g,p={create:function(){var t=new x.ARRAY_TYPE(9);return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},fromMat4:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[4],t[4]=e[5],t[5]=e[6],t[6]=e[8],t[7]=e[9],t[8]=e[10],t},clone:function(t){var e=new x.ARRAY_TYPE(9);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},fromValues:function(t,e,i,r,n,o,a,s,l){var u=new x.ARRAY_TYPE(9);return u[0]=t,u[1]=e,u[2]=i,u[3]=r,u[4]=n,u[5]=o,u[6]=a,u[7]=s,u[8]=l,u},set:function(t,e,i,r,n,o,a,s,l,u){return t[0]=e,t[1]=i,t[2]=r,t[3]=n,t[4]=o,t[5]=a,t[6]=s,t[7]=l,t[8]=u,t},identity:function(t){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},transpose:function(t,e){if(t===e){var i=e[1],r=e[2],n=e[5];t[1]=e[3],t[2]=e[6],t[3]=i,t[5]=e[7],t[6]=r,t[7]=n}else t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8];return t},invert:function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],h=e[8],c=h*a-s*u,d=-h*o+s*l,f=u*o-a*l,m=i*c+r*d+n*f;return m?(m=1/m,t[0]=c*m,t[1]=(-h*r+n*u)*m,t[2]=(s*r-n*a)*m,t[3]=d*m,t[4]=(h*i-n*l)*m,t[5]=(-s*i+n*o)*m,t[6]=f*m,t[7]=(-u*i+r*l)*m,t[8]=(a*i-r*o)*m,t):null},adjoint:function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],h=e[8];return t[0]=a*h-s*u,t[1]=n*u-r*h,t[2]=r*s-n*a,t[3]=s*l-o*h,t[4]=i*h-n*l,t[5]=n*o-i*s,t[6]=o*u-a*l,t[7]=r*l-i*u,t[8]=i*a-r*o,t},determinant:function(t){var e=t[0],i=t[1],r=t[2],n=t[3],o=t[4],a=t[5],s=t[6],l=t[7],u=t[8];return e*(u*o-a*l)+i*(-u*n+a*s)+r*(l*n-o*s)},multiply:function(t,e,i){var r=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=i[0],f=i[1],m=i[2],x=i[3],g=i[4],v=i[5],p=i[6],T=i[7],F=i[8];return t[0]=d*r+f*a+m*u,t[1]=d*n+f*s+m*h,t[2]=d*o+f*l+m*c,t[3]=x*r+g*a+v*u,t[4]=x*n+g*s+v*h,t[5]=x*o+g*l+v*c,t[6]=p*r+T*a+F*u,t[7]=p*n+T*s+F*h,t[8]=p*o+T*l+F*c,t}};p.mul=p.multiply,p.translate=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=i[0],f=i[1];return t[0]=r,t[1]=n,t[2]=o,t[3]=a,t[4]=s,t[5]=l,t[6]=d*r+f*a+u,t[7]=d*n+f*s+h,t[8]=d*o+f*l+c,t},p.rotate=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=e[3],s=e[4],l=e[5],u=e[6],h=e[7],c=e[8],d=Math.sin(i),f=Math.cos(i);return t[0]=f*r+d*a,t[1]=f*n+d*s,t[2]=f*o+d*l,t[3]=f*a-d*r,t[4]=f*s-d*n,t[5]=f*l-d*o,t[6]=u,t[7]=h,t[8]=c,t},p.scale=function(t,e,i){var r=i[0],n=i[1];return t[0]=r*e[0],t[1]=r*e[1],t[2]=r*e[2],t[3]=n*e[3],t[4]=n*e[4],t[5]=n*e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},p.fromTranslation=function(t,e){return t[0]=1,t[1]=0,t[2]=0,t[3]=0,t[4]=1,t[5]=0,t[6]=e[0],t[7]=e[1],t[8]=1,t},p.fromRotation=function(t,e){var i=Math.sin(e),r=Math.cos(e);return t[0]=r,t[1]=i,t[2]=0,t[3]=-i,t[4]=r,t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},p.fromScaling=function(t,e){return t[0]=e[0],t[1]=0,t[2]=0,t[3]=0,t[4]=e[1],t[5]=0,t[6]=0,t[7]=0,t[8]=1,t},p.fromMat2d=function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=0,t[3]=e[2],t[4]=e[3],t[5]=0,t[6]=e[4],t[7]=e[5],t[8]=1,t},p.fromQuat=function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=i+i,s=r+r,l=n+n,u=i*a,h=r*a,c=r*s,d=n*a,f=n*s,m=n*l,x=o*a,g=o*s,v=o*l;return t[0]=1-c-m,t[3]=h-v,t[6]=d+g,t[1]=h+v,t[4]=1-u-m,t[7]=f-x,t[2]=d-g,t[5]=f+x,t[8]=1-u-c,t},p.normalFromMat4=function(t,e){var i=e[0],r=e[1],n=e[2],o=e[3],a=e[4],s=e[5],l=e[6],u=e[7],h=e[8],c=e[9],d=e[10],f=e[11],m=e[12],x=e[13],g=e[14],v=e[15],p=i*s-r*a,T=i*l-n*a,F=i*u-o*a,M=r*l-n*s,E=r*u-o*s,_=n*u-o*l,b=h*x-c*m,R=h*g-d*m,D=h*v-f*m,S=c*g-d*x,I=c*v-f*x,A=d*v-f*g,w=p*A-T*I+F*S+M*D-E*R+_*b;return w?(w=1/w,t[0]=(s*A-l*I+u*S)*w,t[1]=(l*D-a*A-u*R)*w,t[2]=(a*I-s*D+u*b)*w,t[3]=(n*I-r*A-o*S)*w,t[4]=(i*A-n*D+o*R)*w,t[5]=(r*D-i*I-o*b)*w,t[6]=(x*_-g*E+v*M)*w,t[7]=(g*F-m*_-v*T)*w,t[8]=(m*E-x*F+v*p)*w,t):null},p.str=function(t){return"mat3("+t[0]+", "+t[1]+", "+t[2]+", "+t[3]+", "+t[4]+", "+t[5]+", "+t[6]+", "+t[7]+", "+t[8]+")"},p.frob=function(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2)+Math.pow(t[3],2)+Math.pow(t[4],2)+Math.pow(t[5],2)+Math.pow(t[6],2)+Math.pow(t[7],2)+Math.pow(t[8],2))},p.add=function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t[3]=e[3]+i[3],t[4]=e[4]+i[4],t[5]=e[5]+i[5],t[6]=e[6]+i[6],t[7]=e[7]+i[7],t[8]=e[8]+i[8],t},p.subtract=function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t[3]=e[3]-i[3],t[4]=e[4]-i[4],t[5]=e[5]-i[5],t[6]=e[6]-i[6],t[7]=e[7]-i[7],t[8]=e[8]-i[8],t},p.sub=p.subtract,p.multiplyScalar=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t[3]=e[3]*i,t[4]=e[4]*i,t[5]=e[5]*i,t[6]=e[6]*i,t[7]=e[7]*i,t[8]=e[8]*i,t},p.multiplyScalarAndAdd=function(t,e,i,r){return t[0]=e[0]+i[0]*r,t[1]=e[1]+i[1]*r,t[2]=e[2]+i[2]*r,t[3]=e[3]+i[3]*r,t[4]=e[4]+i[4]*r,t[5]=e[5]+i[5]*r,t[6]=e[6]+i[6]*r,t[7]=e[7]+i[7]*r,t[8]=e[8]+i[8]*r,t},p.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]&&t[3]===e[3]&&t[4]===e[4]&&t[5]===e[5]&&t[6]===e[6]&&t[7]===e[7]&&t[8]===e[8]},p.equals=function(t,e){var i=t[0],r=t[1],n=t[2],o=t[3],a=t[4],s=t[5],l=t[6],u=t[7],h=t[8],c=e[0],d=e[1],f=e[2],m=e[3],g=e[4],v=e[5],p=e[6],T=e[7],F=e[8];return Math.abs(i-c)<=x.EPSILON*Math.max(1,Math.abs(i),Math.abs(c))&&Math.abs(r-d)<=x.EPSILON*Math.max(1,Math.abs(r),Math.abs(d))&&Math.abs(n-f)<=x.EPSILON*Math.max(1,Math.abs(n),Math.abs(f))&&Math.abs(o-m)<=x.EPSILON*Math.max(1,Math.abs(o),Math.abs(m))&&Math.abs(a-g)<=x.EPSILON*Math.max(1,Math.abs(a),Math.abs(g))&&Math.abs(s-v)<=x.EPSILON*Math.max(1,Math.abs(s),Math.abs(v))&&Math.abs(l-p)<=x.EPSILON*Math.max(1,Math.abs(l),Math.abs(p))&&Math.abs(u-T)<=x.EPSILON*Math.max(1,Math.abs(u),Math.abs(T))&&Math.abs(h-F)<=x.EPSILON*Math.max(1,Math.abs(h),Math.abs(F))};function T(t,e=!1){(window.jraDebug||e)&&console.log(`%c ${t}`,"background:red;color:white; padding-left:2px; padding-right:2px;")}window.jraDebug=!1,window.toggleDebug=function(){window.jraDebug=!window.jraDebug};var F=function(t,e={}){let i=t.createProgram();for(let t in M.prototype)i[t]=M.prototype[t];let r=new M(t,e);return Object.assign(i,r),i.parseSpec(),i};function M(t,e=null){this.gl=t,this.uniforms=[],this.attributes={},this.spec=null!==e?e:{},this.name=e.hasOwnProperty("name")?e.name:null,this.precision="highp float",this.spec.hasOwnProperty("precision")&&(this.precision=this.spec.precision)}M.prototype={bind(){this.gl.useProgram(this)},uniform(t,e,i=""){if(""===i)if(e instanceof Array||"[object ArrayBuffer]"===Object.prototype.toString.call(e.buffer))switch(e.length){case 2:this.setVec2(t,e);break;case 3:this.setVec3(t,e);break;case 9:this.setMat3(t,e);break;case 16:this.setMat4(t,e)}else!function(t){return t%1==0}(e)?this.setFloat(t,e):this.setInt(t,e);else this[i](t,e)},setVec2(t,e){return e instanceof Array&&2===e.length&&this.gl.uniform2fv(this.uniforms[t].location,e),this},setVec3(t,e){this._uniformLookup(t),e instanceof Array&&3===e.length&&void 0!==this.uniforms[t]&&this.gl.uniform3fv(this.uniforms[t].location,e)},setFloat(t,e){return this._uniformLookup(t),void 0!==this.uniforms[t]&&this.gl.uniform1f(this.uniforms[t].location,e),this},setInt(t,e){return this._uniformLookup(t),this.gl.uniform1i(this.uniforms[t].location,e),this},setVec3Array(t,e){!e instanceof Array||this.gl.uniform3fv(this.uniforms[t+"[0]"].location,e)},setMat4(t,e){return(e instanceof Array||16===e.length)&&this.gl.uniformMatrix4fv(this.uniforms[t].location,!1,e),this},setMat3(t,e){return e instanceof Array&&9===e.length&&this.gl.uniformMatrix3fv(this.uniforms[t].location,!1,e),this},parseActiveAttributes(){let t=this.gl,e=t.getProgramParameter(this,t.ACTIVE_ATTRIBUTES);for(let i=0;i<e;++i){let e=t.getActiveAttrib(this,i),r=t.getAttribLocation(this,e.name);null!==r&&(this.attributes[e.name]={size:e.size,name:e.name,type:e.type,location:r})}},parseActiveUniforms(){let t=this.gl,e=t.getProgramParameter(this,t.ACTIVE_UNIFORMS);for(let i=0;i<e;++i){let e=t.getActiveUniform(this,i),r=t.getUniformLocation(this,e.name);this.uniforms[e.name]={location:r,name:e.name}}},delete(){this.gl.deleteProgram(this)},loadShader(t,e){let i=this.gl,r=this.compileShader(i.VERTEX_SHADER,t),n=this.compileShader(i.FRAGMENT_SHADER,e);if(!1!==r&&!1!==n){if(i.attachShader(this,r),i.attachShader(this,n),i.linkProgram(this),i.deleteShader(r),i.deleteShader(n),i.getProgramParameter(this,i.LINK_STATUS))return this;throw T("Could not initialize WebGLProgram"),"Couldn't link shader program - "+i.getProgramInfoLog(this)}},compileShader(t,e){let i=this.gl,r=i.createShader(t),n="";return n=t===i.FRAGMENT_SHADER?"FRAGMENT":"VERTEX",i.shaderSource(r,e),i.compileShader(r),i.getShaderParameter(r,i.COMPILE_STATUS)?r:(this.name?T(`Error in ${n} shader compilation with "${this.name}" - `+i.getShaderInfoLog(r)+`\n source was :\n ${e}`,!0):(T(`Error in ${n} shader compilation - `+i.getShaderInfoLog(r),!0),console.log(e)),!1)},parseSpec(){let t=this.spec;if((t.hasOwnProperty("vertex")||t.hasOwnProperty("vertexShader"))&&t.hasOwnProperty("fragment")||t.hasOwnProperty("fragmentShader")){let e="",i="",r=this.gl instanceof WebGL2RenderingContext?"300 es":"";e=t.hasOwnProperty("vertex")?t.vertex:t.vertexShader,i=t.hasOwnProperty("fragment")?t.fragment:t.fragmentShader,t.hasOwnProperty("version")&&(r=t.version),e instanceof Array?e=this._unrollChunks(e,r):""!==r&&(e=`#version ${r} \n`+e),i instanceof Array?i=this._unrollChunks(i,r):""!==r&&(i=`#version ${r} \n precision ${this.precision}; \n`+i),this.vertexSource=e,this.fragmentSource=i,this.loadShader(e,i),this.parseActiveAttributes(),this.parseActiveUniforms()}},_unrollChunks(t,e){let i=""!==e?`#version ${e} \n precision ${this.precision}; \n`:"";return t.forEach(t=>{i+=t+"\n"}),i},getUniformLoc(t){return this.uniforms[t].location},getAttributeLoc(t){return this.attributes[t].location},_uniformLookup(t){if(void 0===this.uniforms[t]&&window.debug)throw new Error("Unable to find uniform "+t)}};var E=function(t){let e=null,i=null;if(window.hasOwnProperty("WebGL2RenderingContext"))e=t.createVertexArray();else{if(null===(i=t.getExtension("OES_vertex_array_object")))return void console.error("Your graphics card doesn't appear to support the VAO extension - please use a newer computer");e=i.createVertexArrayOES()}for(var r in _.prototype)e[r]=_.prototype[r];return Object.assign(e,new _(t)),e};function _(t){this.gl=t,this.attributes={},this.attribCount=0}_.prototype={bind(){this.gl.bindVertexArray(this)},unbind(){this.gl.bindVertexArray(null)},vertexAttribPointer(t,{size:e=3,type:i=this.gl.FLOAT,normalized:r=!1,stride:n=0,offset:o=0}={}){this.gl.vertexAttribPointer(t,e,i,r,n,o)},setAttributeLocation(t,e,i=0){return this.gl.bindAttribLocation(t,i,e)},makeInstancedAttribute(t,e=1){let i=this.gl;if(!(!t instanceof Number)){if(null===i.vertexAttribDivisor||void 0===i.vertexAttribDivisor){let r=null;if(i.hasOwnProperty("ANGLE_instanced_arrays"))r=i.ANGLE_instanced_arrays;else try{r=i.getExtension("ANGLE_instanced_arrays")}catch(t){return console.error("cannot utilize instanced attributes on this GPU"),!1}r.vertexAttribDivisorANGLE(t,e)}else i.vertexAttribDivisor(t,e);return this}},disableInstancedAttribute(t){let e=this.gl;if(!(!t instanceof Number)){if(null===e.vertexAttribDivisor||void 0===e.vertexAttribDivisor){let i=null;if(e.hasOwnProperty("ANGLE_instanced_arrays"))i=e.ANGLE_instanced_arrays;else try{i=e.getExtension("ANGLE_instanced_arrays")}catch(t){return console.error("cannot utilize instanced attributes on this GPU"),!1}i.vertexAttribDivisorANGLE(t,0)}else e.vertexAttribDivisor(t,0);return this}},addAttribute(t,e,i=3,r={type:this.gl.FLOAT,normalized:!1,stride:0,offset:0}){let n=this.gl,o=t.attributes;if(o.hasOwnProperty(e))if(o[e].hasOwnProperty("location"))n.enableVertexAttribArray(o[e].location),this.vertexAttribPointer(o[e].location,{size:i,type:r.type,normalized:r.normalized,stride:r.stride,offset:r.offset});else{let o=setAttributeLocation(t,e,this.attribCount);n.enableVertexAttribArray(o),this.vertexAttribPointer(o,{size:i,type:r.type,normalized:r.normalized,stride:r.stride,offset:r.offset}),this.attribCount+=1}else console.error(`Unable to add attribute ${e} to the VAO because it does not appear to be active.`)},enableAttribute(t,e){"number"==typeof t?this.gl.enableVertexAttribArray(t):this.gl.enableVertexAttribArray(e.attributes[t].loc)},disableAttribute(){}};var b=class{constructor(t,{framebuffer:e=null,width:i=window.innerWidth,height:r=window.innerHeight}={}){this.gl=t,this.vao=E(t),this.framebuffer=e,this.blending=!1,this.blendFunc=null,this.hasIndexBuffer=!1,this.shader=null,this.isInstanced=!1,this.textures={},this.attributes={},this.uniforms={},this.viewport=[0,0,i,r],this.clearColor=[0,0,0,0],window.addEventListener("resize",()=>{this.viewport=[0,0,i,r]})}setClear(t=!1){return this.shouldClear=!0,this.shouldUseClearcolor=t,this}setFramebuffer(t){return t instanceof WebGLFramebuffer&&(this.framebuffer=t),this}setShader(t){return t instanceof WebGLProgram&&t.hasOwnProperty("bind")&&(this.shader=t),this}setBlending(t=!1,e=!1){return this.blending=!0,this.blendFunc=!1!==t?t:()=>{},this.blendEquation=!1!==e?e:()=>{},this}setIndexBuffer(){}getTexture(){if(this.framebuffer)return this.framebuffer.getTexture()}setInstancedAttribute(t,e,{size:i=3,type:r=this.gl.FLOAT,normalized:n=!1,stride:o=0,offset:a=0,numInstances:s=1}={}){this.isInstanced=!0,e instanceof WebGLBuffer&&e.hasOwnProperty("bind")&&(null===this.shader?console.error(`Cannot add attribute "${t}" as there was no shader passed in - thus we can't get the attribute location`):(null!==e.data&&(this.vao.bind(),e.bind(),e.bufferData(e.data),e.unbind(),this.vao.unbind()),this.attributes[t]={buffer:e,name:t,dataOptions:{size:i,type:r,normalized:n,stride:o,offset:a},location:this.shader.attributes[t].location},this.vao.bind(),e.bind(),this.vao.enableAttribute(this.attributes[t].location),this.vao.vertexAttribPointer(this.attributes[t].location,this.attributes[t].dataOptions),this.vao.makeInstancedAttribute(this.attributes[t].location,1),e.unbind(),this.vao.unbind()))}setAttribute(t,e,{size:i=3,type:r=this.gl.FLOAT,normalized:n=!1,stride:o=0,offset:a=0}={}){e instanceof WebGLBuffer&&e.hasOwnProperty("bind")&&(null===this.shader?console.error(`Cannot add attribute "${t}" as there was no shader passed in - thus we can't get the attribute location`):(null!==e.data&&(this.vao.bind(),e.bind(),e.bufferData(e.data),e.unbind(),this.vao.unbind()),this.attributes[t]={buffer:e,name:t,dataOptions:{size:i,type:r,normalized:n,stride:o,offset:a},location:this.shader.attributes[t].location},this.vao.bind(),e.bind(),this.vao.enableAttribute(this.attributes[t].location),this.vao.vertexAttribPointer(this.attributes[t].location,this.attributes[t].dataOptions),e.unbind(),this.vao.unbind()))}useProgram(t=null){return this.shader||null===t||(this.shader=t),this}uniform(t,e,i=null){return this.uniforms[t]={func:null!==i?i:"uniform",name:t,value:e},this}uniformTexture(t,e,i){return this.setTextureUniform(t,e,i),this}setTextureUniform(t,e,i){if(this.gl,!(!i instanceof WebGLTexture))return this.textures[t]={location:e,texture:i},this}setViewport(t,e,i,r){return this.viewport=[t,e,i,r],this}drawElements(t=this.gl.TRIANGLES,e=this.numElements,i=this.gl.UNSIGNED_SHORT,r=0,{viewportReset:n=[0,0,window.innerWidth,window.innerHeight]}={}){}drawArrays(t=this.gl.TRIANGLES,e=0,i=0,r={numInstances:1,viewportReset:[0,0,window.innerWidth,window.innerHeight]}){let n=this.gl;if(this._updateViewport(),this.vao.bind(),this.shader){this.shader.bind();for(let t in this.uniforms){let e=this.uniforms[t];this.shader.uniforms[t],this.shader[e.func](e.name,e.value)}for(let t in this.textures){let e=this.textures[t];if(void 0===this.shader.uniforms[t])return void console.log("Unable to find uniform for texture ",t);e.texture.bind(e.location),this.shader.uniform(t,e.location)}}this.framebuffer&&(this.framebuffer.bind(),this.shouldClear&&n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT)),this.isInstanced?n.drawArraysInstanced(t,e,i,r.numInstances):n.drawArrays(t,e,i),this.framebuffer&&this.framebuffer.unbind(),this._updateViewport(r.viewportReset),this.vao.unbind()}_updateViewport(t=null){null!==t?this.gl.viewport(t[0],t[1],t[2],t[3]):this.gl.viewport(this.viewport[0],this.viewport[1],this.viewport[2],this.viewport[3])}_unbindTextures(){this.gl.bindTexture(this.gl.TEXTURE_2D,null)}_enableAttributes(){let t=this.attributes,e=this.vao;for(let i in t){let r=t[i];r.buffer.bind(),e.enableAttribute(r.location)}}_disableAttributes(){this.gl;let t=this.attributes,e=this.vao;for(let i in t){let r=t[i];r.buffer.bind(),e.disableAttribute(r.location)}}},R=function(t,{width:e=512,height:i=512,format:r=null,data:n=null}={},o=null){let a=t.createTexture();for(let t in D.prototype)a[t]=D.prototype[t];let s=null;null===r?s=S.getDefaults(t,e,i):(s=S.getDefaults(t,e,i),Object.assign(s,r)),t.getExtension("OES_texture_float"),t.getExtension("OES_texture_float_linear");let l=new D(t,e,i,s,o);return Object.assign(a,l),n instanceof Image?a.initializeImageTexture(n):a.initializeDataTexture(n),a};function D(t,e,i,r,n=null){return this.gl=t,this.format=r,this.width=e,this.height=i,this.isNodeBasedTexture=!1,this.name=n,this}D.prototype={setName(t=null){this.name=t},bind(t=0){let e=this.gl;e.activeTexture(e[`TEXTURE${t}`]),e.bindTexture(e.TEXTURE_2D,this)},unbind(){this.gl.bindTexture(this.gl.TEXTURE_2D,null)},createDepthTexture({wrapS:t=this.gl.CLAMP_TO_EDGE,wrapT:e=this.gl.CLAMP_TO_EDGE,minFilter:i=this.gl.LINEAR,magFilter:r=this.gl.LINEAR,depthType:n=this.gl.DEPTH_COMPONENT16,width:o=this.width,height:a=this.height}={}){let s=this.gl;return s.bindTexture(s.TEXTURE_2D,this),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MAG_FILTER,r),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_MIN_FILTER,i),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_S,t),s.texParameteri(s.TEXTURE_2D,s.TEXTURE_WRAP_T,e),s instanceof WebGLRenderingContext?s.texImage2D(s.TEXTURE_2D,0,n,o,a,0,n,s.UNSIGNED_SHORT,null):s.texImage2D(s.TEXTURE_2D,0,n,o,a,0,s.DEPTH_COMPONENT,s.UNSIGNED_SHORT,null),s.bindTexture(s.TEXTURE_2D,null),this},initializeDataTexture(t){let e=this.gl,i=this.format;return e.bindTexture(e.TEXTURE_2D,this),i.flipY,e.texImage2D(e.TEXTURE_2D,0,i.internalFormat,i.width,i.height,0,i.format,i.texelType,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i.magFilter),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i.minFilter),this.name,e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i.wrapS),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,i.wrapT),i.generateMipMaps&&e.generateMipmap(e.TEXTURE_2D),e.bindTexture(e.TEXTURE_2D,null),this.contents=t,this},initializeImageTexture(t){let e=this.gl,i=this.format;return this.width=t.width,this.height=t.height,e.bindTexture(e.TEXTURE_2D,this),i.flipY&&e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,i.flipY),e.texImage2D(e.TEXTURE_2D,0,i.format,i.format,i.texelType,t),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,i.magFilter),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,i.minFilter),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,i.wrapS),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,i.wrapT),i.generateMipMaps&&e.generateMipmap(e.TEXTURE_2D),e.bindTexture(e.TEXTURE_2D,null),this.contents=t,this.isNodeBasedTexture=!0,this},_generateRandomFloatingPointData(t,e,i=!1){let r=null;i=!1!==i?4:3,r=new Float32Array(t*e*i);let n=t*e;for(let t=0;t<n;++t)r[t]=Math.random();return r},resize(t,e){let i=this.gl,r=this.format;this.width=t,this.height=e,this.bind(),this.isNodeBasedTexture?i.texImage2D(i.TEXTURE_2D,0,r.format,r.format,r.texelType,this.contents):i.texImage2D(i.TEXTURE_2D,0,r.internalFormat,this.width,this.height,0,r.format,r.texelType,this.contents),this.unbind(0)}};class S{constructor(t,{wrapS:e=t.CLAMP_TO_EDGE,wrapT:i=t.CLAMP_TO_EDGE,minFilter:r=t.NEAREST,magFilter:n=t.NEAREST,flipY:o=!1,generateMipmaps:a=!1,format:s=t.RGBA}={}){this.gl=t,this.format=s,this.generateMipmaps=a,this.wrapS=e,this.wrapT=i,this.minFilter=r,this.magFilter=n,this.flipY=o}setWrap(t,e){return this.wrapS=this.gl[t],this.wrapT=this.gl[e],this}setFilter(t,e){return this.minFilter=this.gl[t],this.magFilter=this.gl[e],this}flipY(t=!1){return this.flipY=t,this}getFormat(){return{wrapS:this.wrapS,wrapT:this.wrapT,minFilter:this.minFilter,magFilter:this.magFilter,flipY:this.flipY,format:this.format}}static getDefaults(t,e,i,r=!0){return{width:e,height:i,wrapS:t.CLAMP_TO_EDGE,wrapT:t.CLAMP_TO_EDGE,minFilter:t.NEAREST,magFilter:t.NEAREST,texelType:t.UNSIGNED_BYTE,generateMipmaps:!1,format:t.RGB,internalFormat:t.RGB,flipY:r}}}var I=function(t,{width:e=512,height:i=512,textureFormat:r=null,initialTexture:n=null,attachments:o=[],hasDepthTexture:a=!1}={}){let s=t.createFramebuffer();for(var l in A.prototype)s[l]=A.prototype[l];return Object.assign(s,new A(t,{width:e,height:i,textureFormat:r,initialTexture:n,attachments:o,depthTexture:a})),s._build(),s};function A(t,e){this.gl=t,this.width=e.width,this.height=e.height,this.textureFormat=e.textureFormat,this.options=e,this.attachments=e.attachments,this.texture=null,t.getExtension("EXT_color_buffer_float")}A.prototype={getTexture(){return this.attachments<1?this.texture:this.getTextureAt()},resize(t,e){this.gl;return this.width=t,this.height=e,this.texture.resize(t,e),this._build(),this},replaceTexture(t,{clear:e=!1,shouldClearColor:i=!1,clearColor:r=[0,0,0,0],width:n=512,height:o=512}={}){return t instanceof WebGLTexture&&(this.options.initialTexture=t,this.width=void 0!==t.width?t.width:n,this.height=void 0!==t.height?t.height:o,this._build(),e&&this.clear(i,r[0],r[1],r[2],r[3])),this},setViewport(){return this.gl.viewport(0,0,this.width,this.height),this},getTextureAt(t=0){return this.attachments[t]},bind(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this)},unbind(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)},_build(){let t=this.gl,e=this.options;if(t.bindFramebuffer(t.FRAMEBUFFER,this),e.initialTexture)t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e.initialTexture,0),this.texture=e.initialTexture;else{let e=R(t,{width:this.width,height:this.height,format:this.textureFormat});this.texture=e,t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)}if(e.attachments.length>0&&e.attachments.forEach((e,i)=>{let r=t.COLOR_ATTACHMENT0+(i+1);console.log(r,e),t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,e,0)}),this.options.depthTexture){let e=R(t,{width:this.width,height:this.height,format:this.textureFormat});e.createDepthTexture(),t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,e,0)}let i=t.checkFramebufferStatus(t.FRAMEBUFFER);return this._throwError(i),t.bindFramebuffer(t.FRAMEBUFFER,null),this},clear(t=!1,e=0,i=0,r=0,n=0){this.bind(),t&&this.gl.clearColor(e,i,r,n),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.unbind()},_throwError(t){let e=this.gl;switch(t){case e.FRAMEBUFFER_UNSUPPORTED:throw new Error("gl-fbo: Framebuffer unsupported");case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:throw new Error("gl-fbo: Framebuffer incomplete attachment");case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:throw new Error("gl-fbo: Framebuffer incomplete dimensions");case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:throw new Error("gl-fbo: Framebuffer incomplete missing attachment");case e.FRAMEBUFFER_COMPLETE:return!0;default:return console.error("unknown error creating framebuffer"),!1}}};var w=class{constructor(t,{vertex:e="",fragment:i="",defineStatements:r={},drawPrimitive:n=t.TRIANGLES,shaderProgram:o=null}={}){this.gl=t,this.name=name,this.vao=E(t),this.vertex=e,this.fragment=i,this.defines=r,this.indicesSet=!1,this.primitive=n,""!==e&&""!==i&&(this.shader=F(t,{vertex:e,fragment:i})),null!==o&&(this.shader=o)}addAttribute(t,e,{size:i=3,dataOptions:r={type:this.gl.FLOAT,normalized:this.gl.FALSE,stride:0,offset:0}}={}){if(!e instanceof Array||!e instanceof ArrayBuffer)return;let n=this.gl;e instanceof Array&&(e=new Float32Array(e));let o=c(n);this.vao.bind(),o.bind(),o.bufferData(e),this.vao.addAttribute(this.shader,t,i),this.vao.unbind(),o.unbind()}addIndices(t){let e=this.gl,i=c(e,{indexed:!0});this.vao.bind(),i.bind(),i.bufferData(t),this.vao.unbind(),i.unbind(),this.indicesSet=!0,this.numVertices=t.length}draw(t,e=100){let i=this.gl;this.numVertices=void 0!==this.numVertices?this.numVertices:e,this.shader.bind(),this.vao.bind(),i.drawElements(i.TRIANGLES,this.numVertices,i.UNSIGNED_SHORT,0),this.vao.unbind()}},y=i(2),P=i.n(y),U=i(22),z=i.n(U);var C=class extends w{constructor(t,{vertex:e=P.a,fragment:i=z.a,hasTexture:r=!1}={}){super(t,{vertex:e,fragment:!1!==r?["#define HAS_TEXTURE",i].join("/"):i}),this.hasTexture=r,this.addAttribute("position",[-1,-1,-1,4,4,-1],{size:2}),this.resolution=[window.innerWidth,window.innerWidth],window.addEventListener("resize",()=>{this.resolution=[window.innerWidth,window.innerWidth]})}static getVertices(){return[-1,-1,-1,4,4,-1]}static getVertexShader(){return P.a}uniform(t,e){this.shader.uniform(t,e)}draw(t=null,e=!1){let i=this.gl;i.useProgram(this.shader),this.vao.bind(),(this.hasTexture||null!==t)&&t.bind(),i.drawArrays(i.TRIANGLES,0,3),this.vao.unbind(),(this.hasTexture||null!==t)&&t.unbind(),e&&i.deleteProgram(this.shader)}},O={create:function(){var t=new x.ARRAY_TYPE(3);return t[0]=0,t[1]=0,t[2]=0,t},clone:function(t){var e=new x.ARRAY_TYPE(3);return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},fromValues:function(t,e,i){var r=new x.ARRAY_TYPE(3);return r[0]=t,r[1]=e,r[2]=i,r},copy:function(t,e){return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},set:function(t,e,i,r){return t[0]=e,t[1]=i,t[2]=r,t},add:function(t,e,i){return t[0]=e[0]+i[0],t[1]=e[1]+i[1],t[2]=e[2]+i[2],t},subtract:function(t,e,i){return t[0]=e[0]-i[0],t[1]=e[1]-i[1],t[2]=e[2]-i[2],t}};O.sub=O.subtract,O.multiply=function(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t[2]=e[2]*i[2],t},O.mul=O.multiply,O.divide=function(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t[2]=e[2]/i[2],t},O.div=O.divide,O.ceil=function(t,e){return t[0]=Math.ceil(e[0]),t[1]=Math.ceil(e[1]),t[2]=Math.ceil(e[2]),t},O.floor=function(t,e){return t[0]=Math.floor(e[0]),t[1]=Math.floor(e[1]),t[2]=Math.floor(e[2]),t},O.min=function(t,e,i){return t[0]=Math.min(e[0],i[0]),t[1]=Math.min(e[1],i[1]),t[2]=Math.min(e[2],i[2]),t},O.max=function(t,e,i){return t[0]=Math.max(e[0],i[0]),t[1]=Math.max(e[1],i[1]),t[2]=Math.max(e[2],i[2]),t},O.round=function(t,e){return t[0]=Math.round(e[0]),t[1]=Math.round(e[1]),t[2]=Math.round(e[2]),t},O.scale=function(t,e,i){return t[0]=e[0]*i,t[1]=e[1]*i,t[2]=e[2]*i,t},O.scaleAndAdd=function(t,e,i,r){return t[0]=e[0]+i[0]*r,t[1]=e[1]+i[1]*r,t[2]=e[2]+i[2]*r,t},O.distance=function(t,e){var i=e[0]-t[0],r=e[1]-t[1],n=e[2]-t[2];return Math.sqrt(i*i+r*r+n*n)},O.dist=O.distance,O.squaredDistance=function(t,e){var i=e[0]-t[0],r=e[1]-t[1],n=e[2]-t[2];return i*i+r*r+n*n},O.sqrDist=O.squaredDistance,O.length=function(t){var e=t[0],i=t[1],r=t[2];return Math.sqrt(e*e+i*i+r*r)},O.len=O.length,O.squaredLength=function(t){var e=t[0],i=t[1],r=t[2];return e*e+i*i+r*r},O.sqrLen=O.squaredLength,O.negate=function(t,e){return t[0]=-e[0],t[1]=-e[1],t[2]=-e[2],t},O.inverse=function(t,e){return t[0]=1/e[0],t[1]=1/e[1],t[2]=1/e[2],t},O.normalize=function(t,e){var i=e[0],r=e[1],n=e[2],o=i*i+r*r+n*n;return o>0&&(o=1/Math.sqrt(o),t[0]=e[0]*o,t[1]=e[1]*o,t[2]=e[2]*o),t},O.dot=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]},O.cross=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=i[0],s=i[1],l=i[2];return t[0]=n*l-o*s,t[1]=o*a-r*l,t[2]=r*s-n*a,t},O.lerp=function(t,e,i,r){var n=e[0],o=e[1],a=e[2];return t[0]=n+r*(i[0]-n),t[1]=o+r*(i[1]-o),t[2]=a+r*(i[2]-a),t},O.hermite=function(t,e,i,r,n,o){var a=o*o,s=a*(2*o-3)+1,l=a*(o-2)+o,u=a*(o-1),h=a*(3-2*o);return t[0]=e[0]*s+i[0]*l+r[0]*u+n[0]*h,t[1]=e[1]*s+i[1]*l+r[1]*u+n[1]*h,t[2]=e[2]*s+i[2]*l+r[2]*u+n[2]*h,t},O.bezier=function(t,e,i,r,n,o){var a=1-o,s=a*a,l=o*o,u=s*a,h=3*o*s,c=3*l*a,d=l*o;return t[0]=e[0]*u+i[0]*h+r[0]*c+n[0]*d,t[1]=e[1]*u+i[1]*h+r[1]*c+n[1]*d,t[2]=e[2]*u+i[2]*h+r[2]*c+n[2]*d,t},O.random=function(t,e){e=e||1;var i=2*x.RANDOM()*Math.PI,r=2*x.RANDOM()-1,n=Math.sqrt(1-r*r)*e;return t[0]=Math.cos(i)*n,t[1]=Math.sin(i)*n,t[2]=r*e,t},O.transformMat4=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=i[3]*r+i[7]*n+i[11]*o+i[15];return a=a||1,t[0]=(i[0]*r+i[4]*n+i[8]*o+i[12])/a,t[1]=(i[1]*r+i[5]*n+i[9]*o+i[13])/a,t[2]=(i[2]*r+i[6]*n+i[10]*o+i[14])/a,t},O.transformMat3=function(t,e,i){var r=e[0],n=e[1],o=e[2];return t[0]=r*i[0]+n*i[3]+o*i[6],t[1]=r*i[1]+n*i[4]+o*i[7],t[2]=r*i[2]+n*i[5]+o*i[8],t},O.transformQuat=function(t,e,i){var r=e[0],n=e[1],o=e[2],a=i[0],s=i[1],l=i[2],u=i[3],h=u*r+s*o-l*n,c=u*n+l*r-a*o,d=u*o+a*n-s*r,f=-a*r-s*n-l*o;return t[0]=h*u+f*-a+c*-l-d*-s,t[1]=c*u+f*-s+d*-a-h*-l,t[2]=d*u+f*-l+h*-s-c*-a,t},O.rotateX=function(t,e,i,r){var n=[],o=[];return n[0]=e[0]-i[0],n[1]=e[1]-i[1],n[2]=e[2]-i[2],o[0]=n[0],o[1]=n[1]*Math.cos(r)-n[2]*Math.sin(r),o[2]=n[1]*Math.sin(r)+n[2]*Math.cos(r),t[0]=o[0]+i[0],t[1]=o[1]+i[1],t[2]=o[2]+i[2],t},O.rotateY=function(t,e,i,r){var n=[],o=[];return n[0]=e[0]-i[0],n[1]=e[1]-i[1],n[2]=e[2]-i[2],o[0]=n[2]*Math.sin(r)+n[0]*Math.cos(r),o[1]=n[1],o[2]=n[2]*Math.cos(r)-n[0]*Math.sin(r),t[0]=o[0]+i[0],t[1]=o[1]+i[1],t[2]=o[2]+i[2],t},O.rotateZ=function(t,e,i,r){var n=[],o=[];return n[0]=e[0]-i[0],n[1]=e[1]-i[1],n[2]=e[2]-i[2],o[0]=n[0]*Math.cos(r)-n[1]*Math.sin(r),o[1]=n[0]*Math.sin(r)+n[1]*Math.cos(r),o[2]=n[2],t[0]=o[0]+i[0],t[1]=o[1]+i[1],t[2]=o[2]+i[2],t},O.forEach=function(){var t=O.create();return function(e,i,r,n,o,a){var s,l;for(i||(i=3),r||(r=0),l=n?Math.min(n*i+r,e.length):e.length,s=r;s<l;s+=i)t[0]=e[s],t[1]=e[s+1],t[2]=e[s+2],o(t,t,a),e[s]=t[0],e[s+1]=t[1],e[s+2]=t[2];return e}}(),O.angle=function(t,e){var i=O.fromValues(t[0],t[1],t[2]),r=O.fromValues(e[0],e[1],e[2]);O.normalize(i,i),O.normalize(r,r);var n=O.dot(i,r);return n>1?0:Math.acos(n)},O.str=function(t){return"vec3("+t[0]+", "+t[1]+", "+t[2]+")"},O.exactEquals=function(t,e){return t[0]===e[0]&&t[1]===e[1]&&t[2]===e[2]},O.equals=function(t,e){var i=t[0],r=t[1],n=t[2],o=e[0],a=e[1],s=e[2];return Math.abs(i-o)<=x.EPSILON*Math.max(1,Math.abs(i),Math.abs(o))&&Math.abs(r-a)<=x.EPSILON*Math.max(1,Math.abs(r),Math.abs(a))&&Math.abs(n-s)<=x.EPSILON*Math.max(1,Math.abs(n),Math.abs(s))};var L=O;class N{constructor({position:t=L.create(0,0,0),direction:e=L.create(0,0,-1),up:i=L.create(0,1,0)}={}){return this.projection=v.create(),this.view=v.create(),this.fov=0,this.aspect=0,this.near=0,this.far=0,this.inverseView=v.create(),this.position=t,this.direction=e,this.orientation=v.create(),this.up=i,this.center=L.create(),this.eye=L.create(),this}lookAt(t,e=null){return this.eye=L.clone(t),this.center=null!==e?L.clone(e):this.center,L.copy(this.position,t),v.identity(this.view),v.lookAt(this.view,t,this.center,this.up),this}getInverseView(){return v.invert(this.view,this.view)}getProjectionMatrix(){return this.projection}getViewMatrix(){return this.view}getInvertedViewMatrix(){return v.invert(this.inverseView,this.view)}setupPerspective(t,e,i,r){return e="fullscreen"===e?window.innerWidth/window.innerHeight:e,this.projection=v.perspective(this.projection,t,e,i,r),this.fov=t,this.aspect=e,this.near=i,this.far=r,v.translate(this.view,this.view,[0,0,-10]),this}updatePerspective({fov:t=this.fov,aspect:e=window.innerWidth/window.innerHeight,near:i=this.near,far:r=this.far}={}){return this.projection=v.perspective(this.projection,t,e,i,r),this.fov=t,this.aspect=e,this.near=i,this.far=r,this}}var B=N;var V=i(21),G=i.n(V),X=i(20),H=i.n(X),W={pallet:[[32,160,170],[236,64,57],[255,174,18],[234,34,94],[237,91,53],[245,181,46],[0,163,150],[22,116,188]]};var Y=i(19),k=i.n(Y),q=i(18),j=i.n(q),Z=i(17),$=i.n(Z),K=i(16),Q=i.n(K),J=function(){function t(t,e){var i=void 0===e?{}:e,r=i.particlesWidth,n=void 0===r?100:r,o=i.particlesHeight,a=void 0===o?100:o,s=this;this.gl=t,this.particlesWidth=n,this.particlesHeight=a,this.numParticles=n*a,this.modelMatrix=v.create(),this.modelMatrix=v.translate(this.modelMatrix,this.modelMatrix,[-20,-5,-10]),this.capture=I(t,{width:window.innerWidth,height:window.innerHeight}),this.blurBuffer1=I(t,{width:window.innerWidth,height:window.innerHeight}),this.blurBuffer2=I(t,{width:window.innerWidth,height:window.innerHeight}),this.compositeBuffer=I(t,{width:window.innerWidth,height:window.innerHeight}),this.colorPallet=[],W.pallet.forEach(function(t){t.forEach(function(t){s.colorPallet.push(t)})}),this.camera=new B,this.camera.setupPerspective(Math.PI/3,window.innerWidth/window.innerHeight,.1,1e3),function(t,e){t.zoom=e,t.position=[0,0,e],t.lookAt([0,0,0]),v.translate(t.view,t.view,[0,0,e])}(this.camera,-20),window.addEventListener("resize",function(){s.camera.updatePerspective({fov:Math.PI/3,aspect:window.innerWidth/window.innerHeight,near:.1,far:100})}),this._buildDebug(),this._buildRender()}return t.prototype.transformDirectionByMatrix=function(t,e,i){var r=e[0],n=e[1],o=e[2];return t[0]=i[0]*r+i[4]*n+i[8]*o,t[1]=i[1]*r+i[5]*n+i[9]*o,t[2]=i[2]*r+i[6]*n+i[10]*o,t[3]=i[3]*r+i[7]*n+i[11]*o,t},t.prototype.setNumParticles=function(t){this.numParticles=t},t.prototype.draw=function(t){this.drawActual(this.camera,t)},t.prototype.drawActual=function(t,e){var i=this.gl;i.clearScreen(0);var r=function(t,e,i){return{x:t*Math.tan(i/2)*(window.innerWidth/window.innerHeight),y:e*Math.tan(i/2),z:-1}}(window.mouse.x,window.mouse.y,Math.PI/3),n=-20*r.x,o=-20*r.y,a=n-this.lastMousePlaneX,s=o-this.lastMousePlaneY;isNaN(a)&&(a=0),isNaN(s)&&(s=0),this.lastMousePlaneX=n,this.lastMousePlaneY=o,window.mouse.velocity[0]=a,window.mouse.velocity[1]=s,this.modelMatrix=v.translate(this.modelMatrix,this.modelMatrix,[20,5,0]),v.rotate(this.modelMatrix,this.modelMatrix,.005,[0,1,0]),this.modelMatrix=v.translate(this.modelMatrix,this.modelMatrix,[-20,-5,0]),this.state.setClear().uniform("projectionMatrix",t.getProjectionMatrix()).uniform("modelViewMatrix",t.getViewMatrix()).uniform("modelMatrix",this.modelMatrix).uniform("colorPallet",this.colorPallet,"setVec3Array").setTextureUniform("u_positionTexture",0,e.particlePositionTexture).setTextureUniform("u_velocityTexture",1,e.particleVelocityTexture).drawArrays(i.POINTS,0,1,{numInstances:this.numParticles/3}),this.blurState.setFramebuffer(this.blurBuffer1),this.blurState.setClear().setTextureUniform("tex0",0,this.state.getTexture()).uniform("attenuation",4.5).uniform("sample_offset",[1/window.innerWidth,0]).drawArrays(i.TRIANGLES,0,3),this.blurState.setFramebuffer(this.blurBuffer2),this.blurState.setClear().setTextureUniform("tex0",0,this.state.getTexture()).uniform("attenuation",4.5).uniform("sample_offset",[0,1/window.innerHeight]).drawArrays(i.TRIANGLES,0,3),this.compositeState.setClear().setTextureUniform("blurState",0,this.blurState.getTexture()).setTextureUniform("normalState",1,this.state.getTexture()).drawArrays(i.TRIANGLES,0,3),this.renderState.draw(this.compositeState.getTexture())},t.prototype._buildRender=function(){var t=this.gl,e=[];this.state=new b(this.gl),this.backgroundState=new b(t),this.backgroundState.setShader(F(this.gl,{vertex:C.getVertexShader(),fragment:Q.a})),this.backgroundState.setAttribute("position",c(t,{data:C.getVertices()}),{size:2});for(var i=this.particlesWidth*this.particlesHeight,r=new Float32Array(this.particlesWidth*this.particlesHeight*2),n=0;n<this.particlesHeight;++n)for(var o=0;o<this.particlesWidth;++o)r[2*(n*this.particlesWidth+o)]=(o+.5)/this.particlesWidth,r[2*(n*this.particlesWidth+o)+1]=(n+.5)/this.particlesHeight;this.state.setShader(F(this.gl,{vertex:G.a,fragment:[j.a,H.a]}));for(var a=[],s=0;s<i;++s)e.push(Math.random()),a.push(20*Math.random());this.state.setAttribute("position",c(this.gl,{data:e})),this.state.setInstancedAttribute("a_textureCoordinates",c(t,{data:r,size:2})),this.state.setFramebuffer(this.capture),this.numParticles=r.length,this.blurState=new b(t),this.blurState.setShader(F(t,{vertex:C.getVertexShader(),fragment:$.a})),this.blurState.setAttribute("position",c(t,{data:C.getVertices()}),{size:2}),this.compositeState=new b(t),this.compositeState.setShader(F(t,{vertex:C.getVertexShader(),fragment:k.a})),this.compositeState.setAttribute("position",c(t,{data:C.getVertices()}),{size:2}),this.compositeState.setFramebuffer(this.compositeBuffer),this.renderState=new C(t,{hasTexture:!0})},t.prototype._buildRenderShape=function(){},t.prototype.debugDraw=function(t){var e=this.gl;e.viewport(0,0,window.innerWidth,window.innerHeight),e.useProgram(this.debugProgram),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t.tempVelocityTexture),e.uniform1i(this.debugProgram.uniforms.uTex0.location,0),e.bindBuffer(e.ARRAY_BUFFER,this.quadVertexBuffer),e.enableVertexAttribArray(0),e.vertexAttribPointer(0,2,e.FLOAT,e.FALSE,0,0),e.drawArrays(e.TRIANGLE_STRIP,0,4),e.bindBuffer(e.ARRAY_BUFFER,null)},t.prototype._buildDebug=function(){var t=this.gl;this.quadVertexBuffer=c(t,{data:[-1,-1,-1,1,1,-1,1,1]}),this.debugProgram=F(t,{vertex:"\n        precision highp float;\n\n        in vec2 a_position;\n\n        out vec2 v_coordinates;\n    \n\n        void main () {\n            v_coordinates = a_position * 0.5 + 0.5;\n\n            gl_Position = vec4(a_position, 0.0, 1.0);\n        }",fragment:"\n        precision highp float;\n        uniform sampler2D uTex0;\n        in vec2 v_coordinates;\n        out vec4 glFragColor;\n        void main(){\n            vec4 d = texture(uTex0,v_coordinates);\n\n            glFragColor = d;\n            glFragColor.a = 1.0;\n    \n        }"})},t}(),tt=i(0),et=i.n(tt),it=i(1),rt=i.n(it),nt=i(15),ot=i.n(nt),at=i(14),st=i.n(at),lt=i(13),ut=i.n(lt),ht=i(12),ct=i.n(ht),dt=i(11),ft=i.n(dt),mt=i(10),xt=i.n(mt),gt=i(9),vt=i.n(gt),pt=i(8),Tt=i.n(pt),Ft=i(7),Mt=i.n(Ft),Et=i(6),_t=i.n(Et),bt=i(5),Rt=i.n(bt),Dt=i(4),St=i.n(Dt),It=i(3),At=i.n(It),wt=function(){function t(t){this.particlesWidth=0,this.particlesHeight=0,this.gridWidth=0,this.gridHeight=0,this.gridDepth=0,this.gridResolutionX=0,this.gridResolutionY=0,this.gridResolutionZ=0,this.particleDensity=0,this.velocityTextureWidth=0,this.velocityTextureHeight=0,this.scalarTextureWidth=0,this.scalarTextureHeight=0,this.flipness=.99,this.frameNumber=0,this.gl=t,this.simulationNumberType=t.HALF_FLOAT}return t.prototype.setup=function(t,e,i,r,n,o){var a=this.gl;this.quadVertexBuffer=c(a,{data:[-1,-1,-1,1,1,-1,1,1]}),this.simulationFramebuffer=I(a),this.particleVertexBuffer=c(a),this.particlePositionTextureTemp=a.createTexture(),this.particleVelocityTexture=a.createTexture(),this.particleVelocityTextureTemp=a.createTexture(),this.particleRandomTexture=a.createTexture(),this.velocityTexture=a.createTexture(),this.tempVelocityTexture=a.createTexture(),this.originalVelocityTexture=a.createTexture(),this.weightTexture=a.createTexture(),this.markerTexture=a.createTexture(),this.divergenceTexture=a.createTexture(),this.pressureTexture=a.createTexture(),this.tempSimulationTexture=a.createTexture(),this._loadShaders(),this._reset(t,e,i,r,n,o)},t.prototype.update=function(t){this.transferToGrid(),this.normalizeGrid(),this.markGrid(),this.saveGrid(),this.addForces(t),this.enforceBoundaries(),this.divergence(),this.runJacobi(),this.subtractFromGradient(),this.transferToParticles(),this.advect(t)},t.prototype.transferToGrid=function(){var t=this.gl,e=this.transferToGridProgram.uniforms;t.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE),t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.weightTexture,0),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT),t.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight);for(var i=-2;i<=2;++i)t.useProgram(this.transferToGridProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.particlePositionTexture),t.uniform1i(e.u_positionTexture.location,0),t.activeTexture(t.TEXTURE0+1),t.bindTexture(t.TEXTURE_2D,this.particleVelocityTexture),t.uniform1i(e.u_velocityTexture.location,1),t.uniform3fv(e.u_gridResolution.location,[this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ]),t.uniform3fv(e.u_gridSize.location,[this.gridWidth,this.gridHeight,this.gridDepth]),t.uniform1i(e.u_accumulate.location,0),t.uniform1f(e.u_zOffset.location,i),t.bindBuffer(t.ARRAY_BUFFER,this.particleVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,t.FALSE,0,0),t.drawArrays(t.POINTS,0,this.particlesWidth*this.particlesHeight),t.bindBuffer(t.ARRAY_BUFFER,null);t.bindFramebuffer(t.FRAMEBUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.tempVelocityTexture,0),t.clearColor(0,0,0,0),t.clear(t.COLOR_BUFFER_BIT);for(i=-2;i<=2;++i)t.useProgram(this.transferToGridProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.particlePositionTexture),t.uniform1i(e.u_positionTexture.location,0),t.activeTexture(t.TEXTURE0+1),t.bindTexture(t.TEXTURE_2D,this.particleVelocityTexture),t.uniform1i(e.u_velocityTexture.location,1),t.uniform3fv(e.u_gridResolution.location,[this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ]),t.uniform3fv(e.u_gridSize.location,[this.gridWidth,this.gridHeight,this.gridDepth]),t.uniform1i(e.u_accumulate.location,1),t.uniform1f(e.u_zOffset.location,i),t.bindBuffer(t.ARRAY_BUFFER,this.particleVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,t.FALSE,0,0),t.drawArrays(t.POINTS,0,this.particlesWidth*this.particlesHeight),t.bindBuffer(t.ARRAY_BUFFER,null);t.bindFramebuffer(t.FRAMEBUFFER,null),t.disable(t.BLEND),t.viewport(0,0,window.innerWidth,window.innerHeight)},t.prototype.normalizeGrid=function(){var t=this.gl,e=this.normalizeGridProgram.uniforms;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.velocityTexture,0),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,t.FALSE,0,0),t.useProgram(this.normalizeGridProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.weightTexture),t.uniform1i(e.u_weightTexture.location,0),t.activeTexture(t.TEXTURE0+1),t.bindTexture(t.TEXTURE_2D,this.tempVelocityTexture),t.uniform1i(e.u_accumulatedVelocityTexture.location,1),t.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null)},t.prototype.markGrid=function(){var t=this.gl,e=this.markProgram.uniforms;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.markerTexture,0),t.clear(t.COLOR_BUFFER_BIT),t.viewport(0,0,this.scalarTextureWidth,this.scalarTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.particleVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.markProgram),t.uniform3f(e.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.uniform3f(e.u_gridSize.location,this.gridWidth,this.gridHeight,this.gridDepth),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.particlePositionTexture),t.uniform1i(e.u_positionTexture.location,0),t.drawArrays(t.POINTS,0,this.particlesWidth*this.particlesHeight),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null)},t.prototype.saveGrid=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.originalVelocityTexture,0),t.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.copyProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.velocityTexture),t.uniform1i(this.copyProgram.uniforms.u_texture.location,0),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null)},t.prototype.addForces=function(t){var e=this.gl,i=void 0!==window.mouse.velocity?window.mouse.velocity:[0,0,0],r=[0,0,0],n=[0,0,0];e.bindFramebuffer(e.FRAMEBUFFER,this.simulationFramebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.tempVelocityTexture,0),e.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight),e.bindBuffer(e.ARRAY_BUFFER,this.quadVertexBuffer),e.enableVertexAttribArray(0),e.vertexAttribPointer(0,2,e.FLOAT,!1,0,0),e.useProgram(this.addForceProgram),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.velocityTexture),e.uniform1i(this.addForceProgram.uniforms.u_velocityTexture.location,0),e.useProgram(this.addForceProgram),e.activeTexture(e.TEXTURE0+1),e.bindTexture(e.TEXTURE_2D,this.particlePositionTexture),e.uniform1i(this.addForceProgram.getUniformLoc("particlePositions"),1),e.uniform1f(this.addForceProgram.uniforms.u_timeStep.location,t),e.uniform3f(this.addForceProgram.uniforms.u_mouseVelocity.location,i[0],i[1],i[2]),e.uniform3f(this.addForceProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),e.uniform3f(this.addForceProgram.uniforms.u_gridSize.location,this.gridWidth,this.gridHeight,this.gridDepth),e.uniform3f(this.addForceProgram.uniforms.u_mouseRayOrigin.location,r[0],r[1],r[2]),e.uniform3f(this.addForceProgram.uniforms.u_mouseRayDirection.location,n[0],n[1],n[2]),e.drawArrays(e.TRIANGLE_STRIP,0,4),e.bindBuffer(e.ARRAY_BUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),this._swap(this,"velocityTexture","tempVelocityTexture")},t.prototype.enforceBoundaries=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.tempVelocityTexture,0),t.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.enforceBoundriesProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.velocityTexture),t.uniform1i(this.enforceBoundriesProgram.uniforms.u_velocityTexture.location,0),t.uniform3f(this.enforceBoundriesProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),this._swap(this,"velocityTexture","tempVelocityTexture")},t.prototype.divergence=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.divergenceTexture,0),t.clear(t.COLOR_BUFFER_BIT),t.viewport(0,0,this.scalarTextureWidth,this.scalarTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.divergenceProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.velocityTexture),t.uniform1i(this.divergenceProgram.uniforms.u_velocityTexture.location,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,this.markerTexture),t.uniform1i(this.divergenceProgram.uniforms.u_markerTexture.location,1),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,this.weightTexture),t.uniform1i(this.divergenceProgram.uniforms.u_weightTexture.location,2),t.uniform1f(this.divergenceProgram.uniforms.u_maxDensity.location,this.particleDensity),t.uniform3f(this.divergenceProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null)},t.prototype.runJacobi=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.pressureTexture,0),t.clear(t.COLOR_BUFFER_BIT),t.bindFramebuffer(t.FRAMEBUFFER,null);for(var e=0;e<50;++e)t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.tempSimulationTexture,0),t.viewport(0,0,this.scalarTextureWidth,this.scalarTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.jacobiProgram),t.uniform3f(this.jacobiProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.pressureTexture),t.uniform1i(this.jacobiProgram.uniforms.u_pressureTexture.location,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,this.divergenceTexture),t.uniform1i(this.jacobiProgram.uniforms.u_divergenceTexture.location,1),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,this.markerTexture),t.uniform1i(this.jacobiProgram.uniforms.u_markerTexture.location,2),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),this._swap(this,"pressureTexture","tempSimulationTexture")},t.prototype.subtractFromGradient=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.tempVelocityTexture,0),t.viewport(0,0,this.velocityTextureWidth,this.velocityTextureHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.subtractProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.pressureTexture),t.uniform1i(this.subtractProgram.uniforms.u_pressureTexture.location,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,this.velocityTexture),t.uniform1i(this.subtractProgram.uniforms.u_velocityTexture.location,1),t.uniform3f(this.subtractProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),this._swap(this,"velocityTexture","tempVelocityTexture")},t.prototype.transferToParticles=function(){var t=this.gl;t.bindFramebuffer(t.FRAMEBUFFER,this.simulationFramebuffer),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,this.particleVelocityTextureTemp,0),t.viewport(0,0,this.particlesWidth,this.particlesHeight),t.bindBuffer(t.ARRAY_BUFFER,this.quadVertexBuffer),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,2,t.FLOAT,!1,0,0),t.useProgram(this.transferToParticlesProgram),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,this.particlePositionTexture),t.uniform1i(this.transferToParticlesProgram.uniforms.u_particlePositionTexture.location,0),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,this.particleVelocityTexture),t.uniform1i(this.transferToParticlesProgram.uniforms.u_particleVelocityTexture.location,1),t.activeTexture(t.TEXTURE2),t.bindTexture(t.TEXTURE_2D,this.velocityTexture),t.uniform1i(this.transferToParticlesProgram.uniforms.u_gridVelocityTexture.location,2),t.activeTexture(t.TEXTURE3),t.bindTexture(t.TEXTURE_2D,this.originalVelocityTexture),t.uniform1i(this.transferToParticlesProgram.uniforms.u_originalGridVelocityTexture.location,3),t.uniform3f(this.transferToParticlesProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),t.uniform3f(this.transferToParticlesProgram.uniforms.u_gridSize.location,this.gridWidth,this.gridHeight,this.gridDepth),t.uniform1f(this.transferToParticlesProgram.uniforms.u_flipness.location,.99),t.drawArrays(t.TRIANGLE_STRIP,0,4),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindFramebuffer(t.FRAMEBUFFER,null),this._swap(this,"particleVelocityTextureTemp","particleVelocityTexture")},t.prototype.advect=function(t){var e=this.gl;this.frameNumber+=1,e.bindFramebuffer(e.FRAMEBUFFER,this.simulationFramebuffer),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,this.particlePositionTextureTemp,0),e.clear(e.COLOR_BUFFER_BIT),e.viewport(0,0,this.particlesWidth,this.particlesHeight),e.bindBuffer(e.ARRAY_BUFFER,this.quadVertexBuffer),e.enableVertexAttribArray(0),e.vertexAttribPointer(0,2,e.FLOAT,e.FALSE,0,0),e.useProgram(this.advectProgram),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,this.particlePositionTexture),e.uniform1i(this.advectProgram.uniforms.u_positionsTexture.location.location,0),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,this.particleRandomTexture),e.uniform1i(this.advectProgram.uniforms.u_randomsTexture.location,1),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,this.velocityTexture),e.uniform1i(this.advectProgram.uniforms.u_velocityGrid.location,2),e.uniform3f(this.advectProgram.uniforms.u_gridResolution.location,this.gridResolutionX,this.gridResolutionY,this.gridResolutionZ),e.uniform3f(this.advectProgram.uniforms.u_gridSize.location,this.gridWidth,this.gridHeight,this.gridDepth),e.uniform1f(this.advectProgram.uniforms.u_timeStep.location,t),e.uniform1f(this.advectProgram.uniforms.u_frameNumber.location,this.frameNumber),e.uniform2f(this.advectProgram.uniforms.u_particlesResolution.location,this.particlesWidth,this.particlesHeight),e.drawArrays(e.TRIANGLE_STRIP,0,4),e.bindBuffer(e.ARRAY_BUFFER,null),e.bindFramebuffer(e.FRAMEBUFFER,null),this._swap(this,"particlePositionTextureTemp","particlePositionTexture")},t.prototype._loadShaders=function(){var t=this.gl;this.transferToGridProgram=F(t,{vertex:ot.a,fragment:[rt.a,st.a]}),this.normalizeGridProgram=F(t,{vertex:et.a,fragment:ut.a}),this.markProgram=F(t,{vertex:ct.a,fragment:ft.a}),this.addForceProgram=F(t,{vertex:et.a,fragment:[rt.a,xt.a]}),this.enforceBoundriesProgram=F(t,{vertex:et.a,fragment:[rt.a,vt.a]}),this.transferToParticlesProgram=F(t,{vertex:et.a,fragment:[rt.a,Tt.a]}),this.divergenceProgram=F(t,{vertex:et.a,fragment:[rt.a,Mt.a]}),this.jacobiProgram=F(t,{vertex:et.a,fragment:[rt.a,_t.a]}),this.subtractProgram=F(t,{vertex:et.a,fragment:[rt.a,At.a]}),this.advectProgram=F(t,{vertex:et.a,fragment:[rt.a,Rt.a]}),this.copyProgram=F(t,{vertex:et.a,fragment:St.a})},t.prototype._swap=function(t,e,i){var r=t[e];t[e]=t[i],t[i]=r},t.prototype._reset=function(t,e,i,r,n,o){this.particlesWidth=t,this.particlesHeight=e,this.gridWidth=r[0],this.gridHeight=r[1],this.gridDepth=r[2],this.gridResolutionX=n[0],this.gridResolutionY=n[1],this.gridResolutionZ=n[2],this.particleDensity=o,this.velocityTextureWidth=(this.gridResolutionX+1)*(this.gridResolutionZ+1),this.velocityTextureHeight=this.gridResolutionY+1,this.scalarTextureWidth=this.gridResolutionX*this.gridResolutionZ,this.scalarTextureHeight=this.gridResolutionY;this.particlesWidth,this.particlesHeight;for(var a=new Float32Array(this.particlesWidth*this.particlesHeight*2),s=0;s<this.particlesHeight;++s)for(var l=0;l<this.particlesWidth;++l)a[2*(s*this.particlesWidth+l)]=(l+.5)/this.particlesWidth,a[2*(s*this.particlesWidth+l)+1]=(s+.5)/this.particlesHeight;for(var u=new Float32Array(this.particlesWidth*this.particlesHeight*4),h=new Float32Array(this.particlesWidth*this.particlesHeight*4),d=0;d<this.particlesWidth*this.particlesHeight;++d){u[4*d]=i[d][0],u[4*d+1]=i[d][1],u[4*d+2]=i[d][2],u[4*d+3]=0;var f=2*Math.random()*Math.PI,m=2*Math.random()-1;h[4*d]=Math.sqrt(1-m*m)*Math.cos(f),h[4*d+1]=Math.sqrt(1-m*m)*Math.sin(f),h[4*d+2]=m,h[4*d+3]=0}var x=this.gl;this.particleVertexBuffer=c(x,{data:a}),this.particlePositionTexture=R(x,{width:this.particlesWidth,height:this.particlesHeight,data:u,format:{format:x.RGBA,internalFormat:x.RGBA32F,texelType:x.FLOAT,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.NEAREST,magFilter:x.NEAREST}}),this.particlePositionTextureTemp=R(x,{width:this.particlesWidth,height:this.particlesHeight,format:{format:x.RGBA,internalFormat:x.RGBA32F,texelType:x.FLOAT,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.NEAREST,magFilter:x.NEAREST}}),this.particleVelocityTexture=R(x,{width:this.particlesWidth,height:this.particlesHeight,format:{format:x.RGBA,internalFormat:x.RGBA32F,texelType:x.FLOAT,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.NEAREST,magFilter:x.NEAREST}}),this.particleVelocityTextureTemp=R(x,{width:this.particlesWidth,height:this.particlesHeight,format:{format:x.RGBA,internalFormat:x.RGBA32F,texelType:x.FLOAT,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.NEAREST,magFilter:x.NEAREST}}),this.particleRandomTexture=R(x,{width:this.particlesWidth,height:this.particlesHeight,data:h,format:{format:x.RGBA,internalFormat:x.RGBA32F,texelType:x.FLOAT,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.NEAREST,magFilter:x.NEAREST}}),this.velocityTexture=R(x,{width:this.velocityTextureWidth,height:this.velocityTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.tempVelocityTexture=R(x,{width:this.velocityTextureWidth,height:this.velocityTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.originalVelocityTexture=R(x,{width:this.velocityTextureWidth,height:this.velocityTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.weightTexture=R(x,{width:this.velocityTextureWidth,height:this.velocityTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.markerTexture=R(x,{width:this.scalarTextureWidth,height:this.scalarTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA,texelType:x.UNSIGNED_BYTE,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.divergenceTexture=R(x,{width:this.scalarTextureWidth,height:this.scalarTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.pressureTexture=R(x,{width:this.scalarTextureWidth,height:this.scalarTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}}),this.tempSimulationTexture=R(x,{width:this.scalarTextureWidth,height:this.scalarTextureHeight,format:{format:x.RGBA,internalFormat:x.RGBA16F,texelType:this.simulationNumberType,wrapS:x.CLAMP_TO_EDGE,wrapT:x.CLAMP_TO_EDGE,minFilter:x.LINEAR,magFilter:x.LINEAR}})},t}(),yt=function(){function t(t){var e=void 0===t?{}:t,i=e.gridWidth,r=void 0===i?40:i,n=e.gridHeight,o=void 0===n?20:n,a=e.gridDepth,s=void 0===a?40:a,l=e.particlesPercell,h=void 0===l?10:l,c=this;this.gridWidth=r,this.gridHeight=o,this.gridDepth=s,this.particlesPerCell=h;var d=u().setFullscreen().attachToScreen();this.gl=d,this.gridCellDensity=.5,this.timeStep=1/60,this.simulator=new wt(d),this.startSimulation(),d.canvas.width=window.innerWidth,d.canvas.height=window.innerHeight;var f=function(){requestAnimationFrame(f),c.update()};f()}return t.prototype.getParticleCount=function(){var t=this.gridWidth*this.gridHeight*this.gridDepth*this.gridCellDensity,e=Math.ceil(Math.pow(t/2,1/3)),i=2*e*e*(1*e),n=0;return(n+=new r([0,0,0],[15,20,20]).computeVolume())/(this.gridWidth*this.gridHeight*this.gridDepth)*i*this.particlesPerCell},t.prototype.startSimulation=function(){var t,e=this.getParticleCount(),i=Math.ceil(e/512),n=512*i,o=[],a=new r([0,0,0],[15,20,20]),s=a.computeVolume();t=Math.floor(n*a.computeVolume()/s);for(var l=0;l<t;++l){var u=a.randomPoint();o.push(u)}var h=this.gridWidth*this.gridHeight*this.gridDepth*this.gridCellDensity,c=Math.ceil(Math.pow(h/2,1/3)),d=1*c,f=2*c,m=[this.gridWidth,this.gridHeight,this.gridDepth],x=[f,c,d];this.renderer=new J(this.gl,{particlesWidth:512,particlesHeight:i}),this.simulator.setup(512,i,o,m,x,this.particlesPerCell)},t.prototype.update=function(){this.simulator.update(1/60),this.renderer.draw(this.simulator)},t}();window.mouse={x:0,y:0,velocity:[0,0,0]},window.addEventListener("mousemove",function(t){var e=function(t,e,i=!1){let r=e.getBoundingClientRect(),n=t.clientX-r.left,o=t.clientY-r.top;return i?function(t,e,i){let r=t/i.width,n=e/i.height;return{x:2*r-1,y:2*(1-n)-1}}(n,o,e):{x:n,y:o}}(t,document.querySelector("canvas"),!0);window.mouse.x=e.x,window.mouse.y=e.y}),new yt}]);